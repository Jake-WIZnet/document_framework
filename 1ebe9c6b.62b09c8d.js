(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{107:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return o})),r.d(t,"rightToc",(function(){return l})),r.d(t,"default",(function(){return s}));var n=r(2),a=r(6),c=(r(0),r(583)),i={id:"internal_memory_and_sfr",title:"Internal Data Memory (256 Byte) and SFR",date:new Date("2020-04-03T00:00:00.000Z")},o={unversionedId:"Product/iMCU/W7100/internal_memory_and_sfr",id:"Product/iMCU/W7100/internal_memory_and_sfr",isDocsHomePage:!1,title:"Internal Data Memory (256 Byte) and SFR",description:"The Figure below shows the Internal Memory and Special Function",source:"@site/docs\\Product\\iMCU\\W7100\\internal_Memory_and_SFR.md",permalink:"/docs/Product/iMCU/W7100/internal_memory_and_sfr",editUrl:"https://github.com/Wiznet/document_framework/tree/master/docs/Product/iMCU/W7100/internal_Memory_and_SFR.md",sidebar:"docs",previous:{title:"All pages",permalink:"/docs/Product/iMCU/W7500P/all_pages"},next:{title:"P0\\PU (0xEB)",permalink:"/docs/Product/iMCU/W7100/p0_pu"}},l=[],b={rightToc:l};function s(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},b,r,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"The Figure below shows the Internal Memory and Special Function\nRegisters (SFR) map."),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"0xFF .. 0x80"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Upper Internal RAM shared with Stack space (indirect addressing)"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"th"},{href:"SFR.md"}),"SFR Special Function Registers (direct addressing)")))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0x7F .. 0x30"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Lower Internal RAM shared with Stack space (direct & indirect addressing)"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0x2F .. 0x20"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bit addressable area"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0x1F .. 0x00"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"4 banks, R0-R7 each"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(c.b)("p",null,"The lower internal RAM consists of four register banks with eight\nregisters each, a bit- addressable segment with 128 bits (16 bytes) that\nbegins at 0x20, and a scratchpad area with 208 bytes is embedded. With\nindirect addressing mode ranging from 0x80 to 0xFF, the highest 128\nbytes is accessed as an internal memory.",Object(c.b)("br",{parentName:"p"}),"\n","But with direct addressing mode ranging from 0x80 to 0xFF, this area is\naccessed as a ",Object(c.b)("strong",{parentName:"p"},"SFR")," memory:"))}s.isMDXComponent=!0},583:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var b=a.a.createContext({}),s=function(e){var t=a.a.useContext(b),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=s(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,i=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),d=s(r),u=n,m=d["".concat(i,".").concat(u)]||d[u]||p[u]||c;return r?a.a.createElement(m,o(o({ref:t},b),{},{components:r})):a.a.createElement(m,o({ref:t},b))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,i=new Array(c);i[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var b=2;b<c;b++)i[b]=r[b];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);