"use strict";(self.webpackChunkwi_znet_documentation=self.webpackChunkwi_znet_documentation||[]).push([[41509],{3905:function(e,r,n){n.d(r,{Zo:function(){return p},kt:function(){return s}});var t=n(67294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=t.createContext({}),c=function(e){var r=t.useContext(u),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},p=function(e){var r=c(e.components);return t.createElement(u.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),s=a,f=m["".concat(u,".").concat(s)]||m[s]||d[s]||o;return n?t.createElement(f,i(i({ref:r},p),{},{components:n})):t.createElement(f,i({ref:r},p))}));function s(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var u in r)hasOwnProperty.call(r,u)&&(l[u]=r[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},51825:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var t=n(83117),a=n(80102),o=(n(67294),n(3905)),i=["components"],l={id:"rng",title:"Random number generator (RNG)",date:new Date("2020-04-03T00:00:00.000Z")},u=void 0,c={unversionedId:"Product/iMCU/W7500/Peripherals-internal/rng",id:"Product/iMCU/W7500/Peripherals-internal/rng",isDocsHomePage:!1,title:"Random number generator (RNG)",description:"Introduction",source:"@site/docs/Product/iMCU/W7500/Peripherals-internal/rng.md",sourceDirName:"Product/iMCU/W7500/Peripherals-internal",slug:"/Product/iMCU/W7500/Peripherals-internal/rng",permalink:"/Product/iMCU/W7500/Peripherals-internal/rng",editUrl:"https://github.com/Wiznet/document_framework/tree/master/docs/Product/iMCU/W7500/Peripherals-internal/rng.md",tags:[],version:"current",frontMatter:{id:"rng",title:"Random number generator (RNG)",date:"2020-04-03T00:00:00.000Z"},sidebar:"docs",previous:{title:"RNG example (Random number generation example)",permalink:"/Product/iMCU/W7500/Peripherals-internal/rng_ex"},next:{title:"SSP SD card LED example",permalink:"/Product/iMCU/W7500/Peripherals-internal/sd_card_led"}},p=[{value:"Introduction",id:"introduction",children:[],level:2},{value:"Features",id:"features",children:[],level:2},{value:"Functional description.",id:"functional-description",children:[{value:"Operation-RNG",id:"operation-rng",children:[],level:3}],level:2},{value:"Peripheral_Examples",id:"peripheral_examples",children:[],level:2}],d={toc:p};function m(e){var r=e.components,l=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},d,l,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"RNG is a 32bit random number generator. RNG generates power on random number when power on reset. RNG can run/stop by software. RNG seed value and polynomial of RNG can be modified by software."),(0,o.kt)("h2",{id:"features"},"Features"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"32bit pseudo random number generator"),(0,o.kt)("li",{parentName:"ul"},"Formula of pseudo random number generator (polynomial) can be modified."),(0,o.kt)("li",{parentName:"ul"},"Seed value of random generator can be modified."),(0,o.kt)("li",{parentName:"ul"},"Support power on reset random value"),(0,o.kt)("li",{parentName:"ul"},"Random value can be obtained by control start/stop by software.")),(0,o.kt)("h2",{id:"functional-description"},"Functional description."),(0,o.kt)("p",null,"The below Figure shows the RNG block diagram."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Figure 1 RNG block diagram",src:n(93875).Z})),(0,o.kt)("h3",{id:"operation-rng"},"Operation-RNG"),(0,o.kt)("p",null,"A random number is automatically generated after powering on reset,\nFollow the procedure below to manually generate a random number."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Change MODE to start/stop by register."),(0,o.kt)("li",{parentName:"ol"},"Change clock source/seed value/polynomial value if need."),(0,o.kt)("li",{parentName:"ol"},"Run and Stop the RNG."),(0,o.kt)("li",{parentName:"ol"},"Read Random value.")),(0,o.kt)("p",null,"The below Figure show the flowchart of RNG operation. "),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(61948).Z})),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"peripheral_examples"},"Peripheral_Examples"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/Product/iMCU/W7500/Peripherals-internal/rng_ex"},"Random Number Generation example"))))}m.isMDXComponent=!0},93875:function(e,r,n){r.Z=n.p+"assets/images/rng_block_diagram-795719f9c86c7a14f6d64cf5c522bd57.jpg"},61948:function(e,r,n){r.Z=n.p+"assets/images/rng_flow_chart-09cb9f407ef8639d6461aefe3fd4c0ed.jpg"}}]);