(self.webpackChunkwi_znet_documentation=self.webpackChunkwi_znet_documentation||[]).push([[45827],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(r),f=i,m=d["".concat(u,".").concat(f)]||d[f]||s[f]||o;return r?n.createElement(m,a(a({ref:t},p),{},{components:r})):n.createElement(m,a({ref:t},p))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},13919:function(e,t,r){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function i(e){return void 0!==e&&!n(e)}r.d(t,{b:function(){return n},Z:function(){return i}})},44996:function(e,t,r){"use strict";r.d(t,{C:function(){return o},Z:function(){return a}});var n=r(52263),i=r(13919);function o(){var e=(0,n.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,r=void 0===t?"/":t,o=e.url;return{withBaseUrl:function(e,t){return function(e,t,r,n){var o=void 0===n?{}:n,a=o.forcePrependBaseUrl,c=void 0!==a&&a,u=o.absolute,l=void 0!==u&&u;if(!r)return r;if(r.startsWith("#"))return r;if((0,i.b)(r))return r;if(c)return t+r;var p=r.startsWith(t)?r:t+r.replace(/^\//,"");return l?e+p:p}(o,r,e,t)}}}function a(e,t){return void 0===t&&(t={}),(0,o().withBaseUrl)(e,t)}},82023:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return s}});var n=r(74034),i=r(79973),o=(r(67294),r(3905)),a=r(44996),c={id:"asg210",title:"Azure Sphere Guardian ASG210",date:new Date("2020-09-15T00:00:00.000Z")},u={unversionedId:"Product/Azure-Sphere/asg210",id:"Product/Azure-Sphere/asg210",isDocsHomePage:!1,title:"Azure Sphere Guardian ASG210",description:"Overview",source:"@site/docs/Product/Azure-Sphere/ASG210.md",sourceDirName:"Product/Azure-Sphere",slug:"/Product/Azure-Sphere/asg210",permalink:"/Product/Azure-Sphere/asg210",editUrl:"https://github.com/Wiznet/document_framework/tree/master/docs/Product/Azure-Sphere/ASG210.md",version:"current",frontMatter:{id:"asg210",title:"Azure Sphere Guardian ASG210",date:"2020-09-15T00:00:00.000Z"},sidebar:"docs",previous:{title:"Products",permalink:"/"},next:{title:"iMCU",permalink:"/Product/iMCU/imcu"}},l=[{value:"Overview",id:"overview",children:[]},{value:"Features",id:"features",children:[]},{value:"Specification",id:"specification",children:[]},{value:"Hardware Overview",id:"hardware-overview",children:[]},{value:"ASG210 Connections",id:"asg210-connections",children:[]},{value:"DC Power Cable Specification",id:"dc-power-cable-specification",children:[]},{value:"Product Handling",id:"product-handling",children:[{value:"Components",id:"components",children:[]}]}],p={toc:l};function s(e){var t=e.components,r=(0,i.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"WIZnet Azure Sphere Guardian 210 (ASG210) is designed for the existing system, Brown-field, which is reqired to data communication with Cloud service or remote access, on Azure Sphere Security system which guarantees high-level security in hardware & network side. ASG210 supports a variety of interfaces, GPIOs/I2C/UART(RS232/485/422) to help reducing additional cost for Brown-field system introducing high-level security system and Cloud service."),(0,o.kt)("img",{src:(0,a.Z)("img/AzureSphere/ASG210_20210210.png"),width:"500"}),(0,o.kt)("h2",{id:"features"},"Features"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Data transfer between the private network and the public network"),(0,o.kt)("li",{parentName:"ul"},"Supports GPIOs/I2C/UART(RS232/485/422) interface for the exsiting system, Brown-field."),(0,o.kt)("li",{parentName:"ul"},"Supports Micro SD Card based on SPI interface"),(0,o.kt)("li",{parentName:"ul"},"Certificate management",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"By console"),(0,o.kt)("li",{parentName:"ul"},"By Azure Sphere Service"),(0,o.kt)("li",{parentName:"ul"},"By Configuration tool thru Ethernet (",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("em",{parentName:"strong"},"Under development")),")"))),(0,o.kt)("li",{parentName:"ul"},"Support TLS session in private network"),(0,o.kt)("li",{parentName:"ul"},"Support BLE software download and debug interface for JLINK"),(0,o.kt)("li",{parentName:"ul"},"Auto switching between Wi-Fi and Ethernet for public networks optionally"),(0,o.kt)("li",{parentName:"ul"},"Support USB interface for debug and programming"),(0,o.kt)("li",{parentName:"ul"},"Support M4 Core UART debugging interface")),(0,o.kt)("h2",{id:"specification"},"Specification"),(0,o.kt)("img",{src:(0,a.Z)("img/AzureSphere/ASG210_spec_table_20210210.png"),width:"550"}),(0,o.kt)("h2",{id:"hardware-overview"},"Hardware Overview"),(0,o.kt)("img",{src:(0,a.Z)("img/AzureSphere/ASG210_board_description_20210210.png"),width:"750"}),(0,o.kt)("h2",{id:"asg210-connections"},"ASG210 Connections"),(0,o.kt)("p",null,"An overview of how ASG210 interface to the equipment in local network is as follows:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Power provided to ASG210 with 5V2A power adapter, power status LED turned on."),(0,o.kt)("li",{parentName:"ol"},"For equipment with as Ethernet interface, connect Ethernet cable from ASG210\u2019s LAN port to the equipment."),(0,o.kt)("li",{parentName:"ol"},"Connect another Ethernet cable from ASG210\u2019s WAN port to internet router for public network."),(0,o.kt)("li",{parentName:"ol"},"Once connected, the LEDs on ASG210 should be as follows:")),(0,o.kt)("img",{src:(0,a.Z)("img/AzureSphere/2853_image.png"),width:"600"}),(0,o.kt)("h2",{id:"dc-power-cable-specification"},"DC Power Cable Specification"),(0,o.kt)("p",null,"Power to ASG210 is supplied directly via 5V2A DC connector or via the debugger board USB Micro B connector."),(0,o.kt)("h2",{id:"product-handling"},"Product Handling"),(0,o.kt)("h3",{id:"components"},"Components"),(0,o.kt)("p",null,"To Program and operate ASG210, the below components, Debugger, Micro USB cable and 5V2A power adapter, are needed."),(0,o.kt)("img",{src:(0,a.Z)("img/AzureSphere/ASG210_components_20210210.png"),width:"700"}))}s.isMDXComponent=!0}}]);