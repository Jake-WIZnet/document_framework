(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{516:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},s=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=b(e,["components","mdxType","originalType","parentName"]),u=p(n),s=a,m=u["".concat(o,".").concat(s)]||u[s]||d[s]||i;return n?r.a.createElement(m,c(c({ref:t},l),{},{components:n})):r.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=s;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),i=(n(0),n(516)),o={id:"mqtt_example",title:"WizFi310 MQTT Example",date:new Date("2020-04-15T00:00:00.000Z")},c={unversionedId:"Product/Wi-Fi-Module/WizFi310/Programers-Guide/mqtt_example",id:"Product/Wi-Fi-Module/WizFi310/Programers-Guide/mqtt_example",isDocsHomePage:!1,title:"WizFi310 MQTT Example",description:"MQTT",source:"@site/docs/Product/Wi-Fi-Module/WizFi310/Programers-Guide/mqtt_example.md",permalink:"/docs/Product/Wi-Fi-Module/WizFi310/Programers-Guide/mqtt_example",editUrl:"https://github.com/Wiznet/document_framework/tree/master/docs/Product/Wi-Fi-Module/WizFi310/Programers-Guide/mqtt_example.md"},b=[{value:"MQTT",id:"mqtt",children:[]},{value:"How to use MQTT in WizFi310",id:"how-to-use-mqtt-in-wizfi310",children:[{value:"MQTT AT Command Set",id:"mqtt-at-command-set",children:[]},{value:"Example AT Command",id:"example-at-command",children:[]}]},{value:"MQTT Example",id:"mqtt-example",children:[{value:"Setup the Broker",id:"setup-the-broker",children:[]},{value:"Make Topic",id:"make-topic",children:[]},{value:"Connect to Adafruit Broker",id:"connect-to-adafruit-broker",children:[]},{value:"Publish the message",id:"publish-the-message",children:[]},{value:"Display the message in io.adafruit.com",id:"display-the-message-in-ioadafruitcom",children:[]}]}],l={rightToc:b};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"mqtt"},"MQTT"),Object(i.b)("p",null,'MQTT is a light weight messaging protocol for use on top of the TCP/IP\nprotocol. It is designed for connections with remote locations where a\n"small code footprint" is required or the network bandwidth is\nlimited.',Object(i.b)("br",{parentName:"p"}),"\n","It is a communication protocol which almost can link all networked\nobjects with the external, and it is used as a sensor.",Object(i.b)("br",{parentName:"p"}),"\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/MQTT"}),"Wikipedia"),"  "),Object(i.b)("h2",{id:"how-to-use-mqtt-in-wizfi310"},"How to use MQTT in WizFi310"),Object(i.b)("h3",{id:"mqtt-at-command-set"},"MQTT AT Command Set"),Object(i.b)("p",null,"There are the necessary Commands for MQTT protocol in the WizFi310.  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"AT+MQTTSET=<UserName>,<Password>,<ClientID>,<AliveTime>  \nAT+MQTTCON=<Con/Discon>,<BrokerIP>,<BrokerPort>,<SSL_Enable>  \nAT+MQTTSUB=<Sub/Unsub>,<Topic>  \nAT+MQTTPUB=<Topic>,<Length>  \n")),Object(i.b)("p",null,"You can find the detailed description about the AT Commands for MQTT\nat the link below.",Object(i.b)("br",{parentName:"p"}),"\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/products/wizfi310/wizfi310pg/at_command_set-mqtt_commands"}),"AT Commands list for MQTT")),Object(i.b)("h3",{id:"example-at-command"},"Example AT Command"),Object(i.b)("h4",{id:"connection"},"Connection"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Connect to Broker with non SSL")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"Already Joined AP.\n    \nAT+MQTTSET=wiznet,8df22daf1fc8427999953b796cdfb1df,wizfi310,60\n[OK]\nAT+MQTTCON=1,52.70.203.194,1883,0\n    \n[MQTT CONNECT]\n[OK]\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Connect to Broker with SSL")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"Already Joined AP.\n    \nAT+MQTTSET=wiznet,8df22daf1fc8427999953b796cdfb1df,wizfi310_ssl,60\n[OK]\nAT+MQTTCON=1,52.70.203.194,8883,1\n    \n[MQTT CONNECT]\n[OK]\n")),Object(i.b)("h4",{id:"subscribe--unsubscribe"},"Subscribe & Unsubscribe"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Subscribe & Receive Message")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"Already Connected with MQTT broker.\n    \nAT+MQTTSUB=1,wiznet/f/WizFi310\n[OK]\n...\nwhen the message received.\n...\n{Q,wiznet/f/WizFi310,,9}test_data\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Unsubscribe")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"Already Connected with MQTT broker.\n\nAT+MQTTSUB=0,wiznet/f/WizFi310\n[OK]\n\n")),Object(i.b)("h4",{id:"publish"},"Publish"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"Already Connected with MQTT broker.\n\nAT+MQTTPUB=wiznet/f/WizFi310,3\n[3]\n...\nInput 3bytes to Serial interface.\n...\n[OK]\n\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"mqtt-example"},"MQTT Example"),Object(i.b)("h3",{id:"setup-the-broker"},"Setup the Broker"),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://io.adafruit.com/"}),"Adafruit")," Broker would be used at this\nExample. Adafruit MQTT broker can support non SSL and SSL Connection and\nthe Adafruit shows the collected data as the Dashboard.  "),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://learn.adafruit.com/adafruit-io/mqtt-api"}),"Adafruit MQTT API\nGuide"),"  "),Object(i.b)("h3",{id:"make-topic"},"Make Topic"),Object(i.b)("p",null,"Create the Feeds in Adafruit. it is equal to Topic in MQTT.",Object(i.b)("br",{parentName:"p"}),"\n",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/products/wizfi310/wizfi310pg/1_feeds.png",alt:null})),"\n",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/products/wizfi310/wizfi310pg/2_newfeed.png",alt:null})),Object(i.b)("br",{parentName:"p"}),"\n","Then, You can see the graph that was made up of raw data.",Object(i.b)("br",{parentName:"p"}),"\n",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/products/wizfi310/wizfi310pg/3_create_aio_key_1.png",alt:null}))),Object(i.b)("h3",{id:"connect-to-adafruit-broker"},"Connect to Adafruit Broker"),Object(i.b)("p",null,"Before connection, you have to know the information about below.  "),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Username"),Object(i.b)("li",{parentName:"ul"},"Adafruit AIO Key"),Object(i.b)("li",{parentName:"ul"},"Adafruit IP & Port")),Object(i.b)("h4",{id:"adafruit-username"},"Adafruit Username"),Object(i.b)("p",null,"It is a username registered in Adafruit.  "),Object(i.b)("h4",{id:"adafruit-aio-key"},"Adafruit AIO Key"),Object(i.b)("p",null,'It is an authentication key for connection to broker. It can be found in\n"VIEW AIO KEYS" button.',Object(i.b)("br",{parentName:"p"}),"\n",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/products/wizfi310/wizfi310pg/4_create_aio_key_2.png",alt:null})),"  "),Object(i.b)("h4",{id:"adafruit-ip--port"},"Adafruit IP & Port"),Object(i.b)("p",null,"It is a information about Connection."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"You can see the IP address using ",Object(i.b)("strong",{parentName:"li"}," AT+FDNS=io.adafruiot.com ")," Command."),Object(i.b)("li",{parentName:"ul"},"non SSL Port is ",Object(i.b)("strong",{parentName:"li"}," 1883 "),", or SSL Port is ",Object(i.b)("strong",{parentName:"li"}," 8883 "),".")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"}," There are AT Commands for setting up the WizFi310. That is used\nwhen using above information and non SSL connection. "),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"AT+FDNS=io.adafruit.com,3000\n52.70.203.194\n[OK]\nAT+MQTTSET=wiznet,8df22daf1fc8427999953b796cdfb1df,wiznet_1,60\n[OK]\nAT+MQTTCON=1,52.70.203.194,8883,1\n    \n[MQTT CONNECT]\n[OK]\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"}," Client ID(wiznet","_","1) is identifier of each MQTT Client and it\nshould be unique per broker. "),Object(i.b)("br",{parentName:"p"}),"\n",Object(i.b)("strong",{parentName:"p"},"KeepAlive time(60 seconds)"),"  "),Object(i.b)("h3",{id:"publish-the-message"},"Publish the message"),Object(i.b)("p",null,"Adafruit IO's MQTT API exposes feed data using special topics. You can\npublish a new value for a feed to its topic, or you can subscribe to a\nfeed's topic to be notified when the feed has a new value. Any one of\nthe following topic forms is valid for a feed",Object(i.b)("br",{parentName:"p"}),"\n","For Examples."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"wiznet/feeds/WizFi310"),Object(i.b)("li",{parentName:"ul"},"wiznet/f/WizFi310")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"AT+MQTTPUB=wiznet/f/WizFi310,4\n[4]\n...\nInput 4bytes to Serial interface.\n...\n[OK]\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"}," 2nd parameter of AT+MQTTPUB command is '4'. it means that you can publish the 4 byte. ")),Object(i.b)("h3",{id:"display-the-message-in-ioadafruitcom"},"Display the message in io.adafruit.com"),Object(i.b)("p",null,"You can see the published data in io.adafruit.com."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/products/wizfi310/wizfi310pg/5_display_value.png",alt:null}))))}p.isMDXComponent=!0}}]);