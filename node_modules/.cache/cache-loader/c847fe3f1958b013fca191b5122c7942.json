{"remainingRequest":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/albinjoseph/Documents/GitHub/document_framework/docs/Product/Open-Source-Hardware/ioShield-L.md","dependencies":[{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/docs/Product/Open-Source-Hardware/ioShield-L.md","mtime":1596193974241},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/.docusaurus/docusaurus-plugin-content-docs/site-docs-product-open-source-hardware-io-shield-l-md-6f8.json","mtime":1597141330196},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/cache-loader/dist/cjs.js","mtime":1596197835880},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/babel-loader/lib/index.js","mtime":1596197835282},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1596377278862},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1596377277825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2FsYmluam9zZXBoL0RvY3VtZW50cy9HaXRIdWIvZG9jdW1lbnRfZnJhbWV3b3JrL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0e21keH1mcm9tJ0BtZHgtanMvcmVhY3QnO2V4cG9ydCBjb25zdCBmcm9udE1hdHRlcj17aWQ6J2lvc2hpZWxkX2wnLHRpdGxlOidpb1NoaWVsZC1MJyxkYXRlOm5ldyBEYXRlKCcyMDIwLTA0LTAzVDAwOjAwOjAwLjAwMFonKX07ZXhwb3J0IGNvbnN0IG1ldGFkYXRhPXsidW52ZXJzaW9uZWRJZCI6IlByb2R1Y3QvT3Blbi1Tb3VyY2UtSGFyZHdhcmUvaW9zaGllbGRfbCIsImlkIjoiUHJvZHVjdC9PcGVuLVNvdXJjZS1IYXJkd2FyZS9pb3NoaWVsZF9sIiwiaXNEb2NzSG9tZVBhZ2UiOmZhbHNlLCJ0aXRsZSI6ImlvU2hpZWxkLUwiLCJkZXNjcmlwdGlvbiI6Ik92ZXJ2aWV3Iiwic291cmNlIjoiQHNpdGUvZG9jcy9Qcm9kdWN0L09wZW4tU291cmNlLUhhcmR3YXJlL2lvU2hpZWxkLUwubWQiLCJwZXJtYWxpbmsiOiIvZG9jcy9Qcm9kdWN0L09wZW4tU291cmNlLUhhcmR3YXJlL2lvc2hpZWxkX2wiLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL1dpem5ldC9kb2N1bWVudF9mcmFtZXdvcmsvdHJlZS9tYXN0ZXIvZG9jcy9Qcm9kdWN0L09wZW4tU291cmNlLUhhcmR3YXJlL2lvU2hpZWxkLUwubWQiLCJzaWRlYmFyIjoic29tZVNpZGViYXIiLCJwcmV2aW91cyI6eyJ0aXRsZSI6ImlvU2hpZWxkLUsiLCJwZXJtYWxpbmsiOiIvZG9jcy9Qcm9kdWN0L09wZW4tU291cmNlLUhhcmR3YXJlL2lvc2hpZWxkX2sifSwibmV4dCI6eyJ0aXRsZSI6IkRlc2lnbiBHdWlkZSIsInBlcm1hbGluayI6Ii9kb2NzL0Rlc2lnbi1HdWlkZS9kZXNpZ25fZ3VpZGUifX07LyogQGpzeCBtZHggKi9leHBvcnQgY29uc3QgcmlnaHRUb2M9W3t2YWx1ZTonT3ZlcnZpZXcnLGlkOidvdmVydmlldycsY2hpbGRyZW46W119LHt2YWx1ZTonTVNQNDMwIExhdW5jaFBhZCcsaWQ6J21zcDQzMC1sYXVuY2hwYWQnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0RldmVsb3BtZW50IEVudmlyb25tZW50JyxpZDonZGV2ZWxvcG1lbnQtZW52aXJvbm1lbnQnLGNoaWxkcmVuOltdfSx7dmFsdWU6J2lvU2hpZWxkLUwgc3VwcG9ydGVkIGRldmljZXMnLGlkOidpb3NoaWVsZC1sLXN1cHBvcnRlZC1kZXZpY2VzJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidBdmFpbGFibGUgUmVzb3VyY2VzJyxpZDonYXZhaWxhYmxlLXJlc291cmNlcycsY2hpbGRyZW46W119XTtjb25zdCBtYWtlU2hvcnRjb2RlPW5hbWU9PmZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O2NvbnN0IGxheW91dFByb3BzPXtyaWdodFRvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJoMiIseyJpZCI6Im92ZXJ2aWV3In0sYE92ZXJ2aWV3YCksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9vc2gvaW9zaGllbGQtbC9pb19zX2xfLnBuZyIsImFsdCI6bnVsbH0pKSxgIGlvU2hpZWxkLUwgaXMgYW4gRXRoZXJuZXQgQm9vc3RlclBhY2sKZm9yIE1TUDQzMCBMYXVuY2hQYWQgZGV2ZWxvcG1lbnQgYm9hcmQo8J+MjmAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHA6Ly93d3cudGkuY29tL3Rvb2wvbXNwLWV4cDQzMGcyIn0pLGBNU1AtRVhQNDMwRzIsClRJYCksYCkuIFRoZSBpb1NoaWVsZC1MIGFsbG93cyBhCk1TUDQzMCBMYXVuY2hQYWQgYm9hcmQgdG8gY29ubmVjdCB0byB0aGUgaW50ZXJuZXQuIEl0IGNvbnNpc3RzIG9mCldJWjU1MGlvIGZvciBldGhlcm5ldCBjb25uZWN0aXZpdHkgYW5kIGFuIGludGVyZmFjZSBib2FyZCB0byBMYXVuY2hQYWQuYCksbWR4KCJoMiIseyJpZCI6Im1zcDQzMC1sYXVuY2hwYWQifSxgTVNQNDMwIExhdW5jaFBhZGApLG1keCgicCIsbnVsbCxgVGhlIE1TUC1FWFA0MzBHMiBsb3ctY29zdCBleHBlcmltZW50ZXIgYm9hcmQgY2FsbGVkIExhdW5jaFBhZCBpcyBhCmNvbXBsZXRlIGRldmVsb3BtZW50IHNvbHV0aW9uIGZvciB0aGUgVGV4YXMgSW5zdHJ1bWVudHMgTVNQNDMwRzJ4eCBWYWx1ZQpMaW5lIHNlcmllcy4gVGhlIGludGVncmF0ZWQgVVNCLWJhc2VkIGVtdWxhdG9yIG9mZmVycyBhbGwgdGhlIGhhcmR3YXJlCmFuZCBzb2Z0d2FyZSBuZWNlc3NhcnkgdG8gZGV2ZWxvcCBhcHBsaWNhdGlvbnMgZm9yIGFsbCBNU1A0MzBHMnh4IHNlcmllcwpkZXZpY2VzLmApLG1keCgicCIsbnVsbCxgRm9yIG1vcmUgZGV0YWlscywgcGxlYXNlIHJlZmVyIHRvIPCfjI5gLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwOi8vd3d3LnRpLmNvbS90b29sL21zcC1leHA0MzBnMiJ9KSxgTVNQNDMwIExhdW5jaFBhZApwYWdlYCksYCBpbiDwn4yOYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cDovL3d3dy50aS5jb20ifSksYFRJIG9mZmljaWFsCndlYnNpdGVgKSxgLmApLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvb3NoL2lvc2hpZWxkLWwvbXNwLWV4cDQzMGcyX3JldjEuNV9mcm9udC5qcGciLCJhbHQiOm51bGx9KSkpLG1keCgiaDIiLHsiaWQiOiJkZXZlbG9wbWVudC1lbnZpcm9ubWVudCJ9LGBEZXZlbG9wbWVudCBFbnZpcm9ubWVudGApLG1keCgicCIsbnVsbCxgVGhlIE1TUC1FWFA0MzBHMiBjYW4gYmUgdXNlZCB3aXRoIElBUiBFbWJlZGRlZCBXb3JrYmVuY2jihKIgSW50ZWdyYXRlZApEZXZlbG9wbWVudCBFbnZpcm9ubWVudCAoSURFKSwgQ29kZSBDb21wb3NlciBTdHVkaW/ihKIoQ0NTKSBJREUgb3IgRW5lcmdpYQoob3Blbi1zb3VyY2UgZWxlY3Ryb25pY3MgcHJvdG90eXBpbmcgcGxhdGZvcm0gYmFzZWQgb24gdGhlIFdpcmluZyBhbmQKQXJkdWlubyBmcmFtZXdvcmspIHRvIHdyaXRlLCBkb3dubG9hZCwgYW5kIGRlYnVnIGFwcGxpY2F0aW9ucy4gTm93IHdlCnByb3ZpZGVzIGxpYnJhcmllcyBmb3IgSUFSIGFuZCBFbmVyZ2lhLCBleGNlcHQgQ0NTLiBMaWJyYXJpZXMgZm9yIENDUwp3aWxsIGJlIHJlbGVhc2VkIHNvb24uYCksbWR4KCJoMiIseyJpZCI6Imlvc2hpZWxkLWwtc3VwcG9ydGVkLWRldmljZXMifSxgaW9TaGllbGQtTCBzdXBwb3J0ZWQgZGV2aWNlc2ApLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYEJvYXJkIDogTVNQLUVYUDQzMEcyIFJldi4gMS41IGFuZCBsYXRlci4gKGZvciBIL1cgVUFSVCBzdXBwb3J0KWApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBNQ1UgOiBNU1A0MzBHMjV4M0lOMjAgKFBESVAyMCBwYWNrYWdlLCAxNmtCIEZsYXNoLCA1MTJCIFJBTSkgYW5kCmxhdGVyLmApKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL29zaC9pb3NoaWVsZC1sL21zcC1leHA0MzBnMi5qcGciLCJhbHQiOm51bGx9KSkpLG1keCgiaDIiLHsiaWQiOiJhdmFpbGFibGUtcmVzb3VyY2VzIn0sYEF2YWlsYWJsZSBSZXNvdXJjZXNgKSxtZHgoInAiLG51bGwsYEFsbCBkZXNpZ24gZmlsZXMgYW5kIHNvdXJjZSBjb2RlcyBmb3IgdGhlIGlvU2hpZWxkIGNhbiBiZSBmb3VuZCBvbgpHaXRIdWI6YCksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgUHJvamVjdCBmb3IgSUFSIEVtYmVkZGVkIFdvcmtiZW5jaCBmb3IgTVNQNDMwIDUuNTIgKEVXTVNQNDMwKWApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBQcm9qZWN0IGZvciBDb2RlIENvbXBvc2VyIFN0dWRpbyA1LjQuMCAoQ0NTdjUpYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYFByb2plY3QgZm9yIEVuZXJnaWFgKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgSGFyZHdhcmUgVmVyMS4wIERlc2lnbiBmaWxlCihgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiL2ltZy9vc2gvaW9zaGllbGQtbC9pb3NoaWVsZC1sX3YxXzBfcGxfMTQwMTE3LnBkZiJ9KSxgUERGYCksYCAvIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiIvaW1nL29zaC9pb3NoaWVsZC1sL2lvc2hpZWxkLWwuemlwIn0pLGBFYWdsZSBDQURgKSxgKSBhbmQgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Ii9pbWcvb3NoL2lvc2hpZWxkLWwvaW9zaGllbGQtbF92MV8wX3BsXzE0MDExNy5wZGYifSksYFBhcnQgTGlzdGApLGAgb2YgaW9TaGllbGQtTGApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBIYXJkd2FyZSBWZXIxLjEgRGVzaWduIGZpbGUKKGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiIvaW1nL29zaC9pb3NoaWVsZC1sL2lvc2hpZWxkLWxfdjEuMV9zY2gucGRmIn0pLGBQREZgKSxgIC8gYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Ii9pbWcvb3NoL2lvc2hpZWxkLWwvaW9zaGllbGQtbF92ZXIxXzEuemlwIn0pLGBFYWdsZSBDQURgKSxgKSBhbmQgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Ii9pbWcvb3NoL2lvc2hpZWxkLWwvaW9zaGllbGQtbF92MV8xX3BsXzE0MDEyMC5wZGYifSksYFBhcnQgTGlzdGApLGAgb2YgaW9TaGllbGQtTGApKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},null]}