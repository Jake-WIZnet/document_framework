{"remainingRequest":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/albinjoseph/Documents/GitHub/document_framework/docs/Product/iMCU/W7500/documents/appnote/How_to_make_KEIL_new_project_for_W7500.md","dependencies":[{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/docs/Product/iMCU/W7500/documents/appnote/How_to_make_KEIL_new_project_for_W7500.md","mtime":1597125364302},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/.docusaurus/docusaurus-plugin-content-docs/site-docs-product-i-mcu-w-7500-documents-appnote-how-to-make-keil-new-project-for-w-7500-md-c8a.json","mtime":1597141330208},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/cache-loader/dist/cjs.js","mtime":1596197835880},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/babel-loader/lib/index.js","mtime":1596197835282},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1596377278862},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1596377277825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2FsYmluam9zZXBoL0RvY3VtZW50cy9HaXRIdWIvZG9jdW1lbnRfZnJhbWV3b3JrL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSIvVXNlcnMvYWxiaW5qb3NlcGgvRG9jdW1lbnRzL0dpdEh1Yi9kb2N1bWVudF9mcmFtZXdvcmsvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IHZhciBmcm9udE1hdHRlcj17aWQ6J2hvd190b19tYWtlX2tlaWxfbmV3X3Byb2plY3RfZm9yX3c3NTAwJyx0aXRsZTonSG93IHRvIG1ha2UgS0VJTCBuZXcgcHJvamVjdCBmb3IgVzc1MDAnLGRhdGU6bmV3IERhdGUoJzIwMjAtMDQtMjBUMDA6MDA6MDAuMDAwWicpfTtleHBvcnQgdmFyIG1ldGFkYXRhPXsidW52ZXJzaW9uZWRJZCI6IlByb2R1Y3QvaU1DVS9XNzUwMC9kb2N1bWVudHMvYXBwbm90ZS9ob3dfdG9fbWFrZV9rZWlsX25ld19wcm9qZWN0X2Zvcl93NzUwMCIsImlkIjoiUHJvZHVjdC9pTUNVL1c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2hvd190b19tYWtlX2tlaWxfbmV3X3Byb2plY3RfZm9yX3c3NTAwIiwiaXNEb2NzSG9tZVBhZ2UiOmZhbHNlLCJ0aXRsZSI6IkhvdyB0byBtYWtlIEtFSUwgbmV3IHByb2plY3QgZm9yIFc3NTAwIiwiZGVzY3JpcHRpb24iOiJIb3cgdG8gbWFrZSBXNzUwMCBLZWlsIFByb2plY3QiLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL1Byb2R1Y3QvaU1DVS9XNzUwMC9kb2N1bWVudHMvYXBwbm90ZS9Ib3dfdG9fbWFrZV9LRUlMX25ld19wcm9qZWN0X2Zvcl9XNzUwMC5tZCIsInBlcm1hbGluayI6Ii9kb2NzL1Byb2R1Y3QvaU1DVS9XNzUwMC9kb2N1bWVudHMvYXBwbm90ZS9ob3dfdG9fbWFrZV9rZWlsX25ld19wcm9qZWN0X2Zvcl93NzUwMCIsImVkaXRVcmwiOiJodHRwczovL2dpdGh1Yi5jb20vV2l6bmV0L2RvY3VtZW50X2ZyYW1ld29yay90cmVlL21hc3Rlci9kb2NzL1Byb2R1Y3QvaU1DVS9XNzUwMC9kb2N1bWVudHMvYXBwbm90ZS9Ib3dfdG9fbWFrZV9LRUlMX25ld19wcm9qZWN0X2Zvcl9XNzUwMC5tZCJ9Oy8qIEBqc3ggbWR4ICovZXhwb3J0IHZhciByaWdodFRvYz1be3ZhbHVlOidJbnRyb2R1Y3Rpb24nLGlkOidpbnRyb2R1Y3Rpb24nLGNoaWxkcmVuOlt7dmFsdWU6J1NURVAgMS4gRG93bmxvYWQgYW5kIGluc3RhbGwgS0VJTDUhJyxpZDonc3RlcC0xLWRvd25sb2FkLWFuZC1pbnN0YWxsLWtlaWw1JyxjaGlsZHJlbjpbXX0se3ZhbHVlOidTVEVQIDIuIERvd25sb2FkIFc3NTAwIExpYnJhcnkhJyxpZDonc3RlcC0yLWRvd25sb2FkLXc3NTAwLWxpYnJhcnknLGNoaWxkcmVuOltdfSx7dmFsdWU6J1NURVAgMy4gbWFrZSB3b3Jrc3BhY2UhIGFuZCBtb3ZlIHRoZSBXNzUwMCBMaWJyYXJ5IHRvIHdvcmtzcGFjZSEnLGlkOidzdGVwLTMtbWFrZS13b3Jrc3BhY2UtYW5kLW1vdmUtdGhlLXc3NTAwLWxpYnJhcnktdG8td29ya3NwYWNlJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidTVEVQIDQuIEV4ZWN1dGUgS0VJTDUgYW5kIG1ha2UgbmV3IHByb2plY3QhJyxpZDonc3RlcC00LWV4ZWN1dGUta2VpbDUtYW5kLW1ha2UtbmV3LXByb2plY3QnLGNoaWxkcmVuOltdfSx7dmFsdWU6J1NURVAgNS4gVzc1MDAgc3RhcnQgdXAgY29kZSBhbmQgc3lzdGVtIGNvZGUgc2V0dGluZyEnLGlkOidzdGVwLTUtdzc1MDAtc3RhcnQtdXAtY29kZS1hbmQtc3lzdGVtLWNvZGUtc2V0dGluZycsY2hpbGRyZW46W119LHt2YWx1ZTonU1RFUCA2LiBzZXR0aW5nIGZvciBpbmNsdWRlIHBhdGhzJyxpZDonc3RlcC02LXNldHRpbmctZm9yLWluY2x1ZGUtcGF0aHMnLGNoaWxkcmVuOltdfSx7dmFsdWU6J1NURVAgNy4gTWVtb3J5IHNldHRpbmchJyxpZDonc3RlcC03LW1lbW9yeS1zZXR0aW5nJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidTVEVQIDguIFNlbGVjdGlvbiBvZiBQZXJpcGhlcmFscyB0byB1c2UnLGlkOidzdGVwLTgtc2VsZWN0aW9uLW9mLXBlcmlwaGVyYWxzLXRvLXVzZScsY2hpbGRyZW46W119LHt2YWx1ZTonU1RFUCA5LiBTZXR0aW5nIHVzZXIgcHJvZ3JhbSB0byB1c2Ugd2l0aCB0aGUgY3JlYXRlZCBiaW4gZmlsZScsaWQ6J3N0ZXAtOS1zZXR0aW5nLXVzZXItcHJvZ3JhbS10by11c2Utd2l0aC10aGUtY3JlYXRlZC1iaW4tZmlsZScsY2hpbGRyZW46W119LHt2YWx1ZTonU1RFUCAxMC4gQ29tcGlsZSB0aGUgZXhhbXBsZScsaWQ6J3N0ZXAtMTAtY29tcGlsZS10aGUtZXhhbXBsZScsY2hpbGRyZW46W119XX1dO3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXtyaWdodFRvYzpyaWdodFRvY307dmFyIE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChfcmVmKXt2YXIgY29tcG9uZW50cz1fcmVmLmNvbXBvbmVudHMscHJvcHM9X29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJoMSIseyJpZCI6Imhvdy10by1tYWtlLXc3NTAwLWtlaWwtcHJvamVjdCJ9LCJIb3cgdG8gbWFrZSBXNzUwMCBLZWlsIFByb2plY3QiKSxtZHgoImhyIixudWxsKSxtZHgoInAiLG51bGwsIihDKSBDT1BZUklHSFQgMjAxNSBXSVpuZXQiKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgicCIse3BhcmVudE5hbWU6ImxpIn0sImF1dGhvciAgOiBJT1AgVGVhbSIpKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxtZHgoInAiLHtwYXJlbnROYW1lOiJsaSJ9LCJ2ZXJzaW9uIDogVjEuMC4wIikpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgicCIse3BhcmVudE5hbWU6ImxpIn0sImRhdGUgICAgOiAxLU1heS0yMDE1IikpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgicCIse3BhcmVudE5hbWU6ImxpIn0sImJyaWVmICAgOiBEZXNjcmlwdGlvbiBvZiBtYWtpbmcgYSBuZXcgS2VpbCBQcm9qZWN0IG9mIFc3NTAwLiIpKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxtZHgoInAiLHtwYXJlbnROYW1lOiJsaSJ9LCJkZXZlbG9wIGVudmlyb25tZW50IDogV2luZG93cyA3IDMyLzY0Yml0cywgS2VpbCBWZXJzaW9uIDUuMTAiKSkpLG1keCgiaHIiLG51bGwpLG1keCgiaDIiLHsiaWQiOiJpbnRyb2R1Y3Rpb24ifSwiSW50cm9kdWN0aW9uIiksbWR4KCJwIixudWxsLCJUaGlzIGFwcGxpY2F0aW9uIG5vdGUgaXMgYSB0dXRvcmlhbCBmb3IgbWFraW5nIGEgS0VJTCBwcm9qZWN0IGZvciBXNzUwMCBNQ1UuIFRoaXMgZG9jdW1lbnQgc2hvdyB5b3UgaG93IHRvIG1ha2UgYSBwcm9qZWN0IGFuZCBhIGJpbiBmaWxlIGZvciBXNzUwMCBzdGVwIGJ5IHN0ZXAgaW4gb3JkZXIgZm9yIHlvdSB0byBmb2xsb3cgdXAgZWFzaWx5LiIpLG1keCgiaDMiLHsiaWQiOiJzdGVwLTEtZG93bmxvYWQtYW5kLWluc3RhbGwta2VpbDUifSwiU1RFUCAxLiBEb3dubG9hZCBhbmQgaW5zdGFsbCBLRUlMNSEiKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWwwLmpwZyIsImFsdCI6ImtlaWwwIn0pKSksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiRG93bmxvYWQgTURLLUFSTSB2NSA6ICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwczovL3d3dy5rZWlsLmNvbS9kb3dubG9hZC9wcm9kdWN0LyJ9KSwiS0VJTDUiKSksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIkluc3RhbGxhdGlvbiBpbnN0cnVjdGlvbnMsIHBsZWFzZSBzZWUgdGhlIExpbmsgOiAiLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaG93X3RvX2luc3RhbGxfS0VJTCJ9KSwiSW5zdGFsbCIpKSksbWR4KCJoMyIseyJpZCI6InN0ZXAtMi1kb3dubG9hZC13NzUwMC1saWJyYXJ5In0sIlNURVAgMi4gRG93bmxvYWQgVzc1MDAgTGlicmFyeSEiKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWwxLmpwZyIsImFsdCI6ImtlaWwxIn0pKSksbWR4KCJwIixudWxsLCJZb3UgY2FuIGRvd25sb2FkIFc3NTAwIExpYnJhcnkgZnJvbSBXSVpuZXQncyBHaXRodWIgcmVwb3NpdG9yeSA6ICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmNvbS9XaXpuZXQvVzc1MDAifSksIlc3NTAwIExpYnJhcnkiKSksbWR4KCJoMyIseyJpZCI6InN0ZXAtMy1tYWtlLXdvcmtzcGFjZS1hbmQtbW92ZS10aGUtdzc1MDAtbGlicmFyeS10by13b3Jrc3BhY2UifSwiU1RFUCAzLiBtYWtlIHdvcmtzcGFjZSEgYW5kIG1vdmUgdGhlIFc3NTAwIExpYnJhcnkgdG8gd29ya3NwYWNlISIpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvdzc1MDAvZG9jdW1lbnRzL2FwcG5vdGUva2VpbDIuanBnIiwiYWx0Ijoia2VpbDIifSkpKSxtZHgoInAiLG51bGwsIkluIHRoaXMgZXhhbXBsZSwgaXQgaXMgIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiRDpcXHdvcmtzcGFjZVxccHJvamVjdFxcTGlicmFyeSIpKSxtZHgoImgzIix7ImlkIjoic3RlcC00LWV4ZWN1dGUta2VpbDUtYW5kLW1ha2UtbmV3LXByb2plY3QifSwiU1RFUCA0LiBFeGVjdXRlIEtFSUw1IGFuZCBtYWtlIG5ldyBwcm9qZWN0ISIpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvdzc1MDAvZG9jdW1lbnRzL2FwcG5vdGUva2VpbDMuanBnIiwiYWx0Ijoia2VpbDMifSkpKSxtZHgoInAiLG51bGwsIkNsaWNrIHRvIE5ldyB1VmlzaW9uIFByb2plY3QuLi4iKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWw0LmpwZyIsImFsdCI6ImtlaWw0In0pKSksbWR4KCJwIixudWxsLCJTZWxlY3QgYSBwcm9qZWN0IHNhdmUgZm9sZGVyIGFuZCBjaG9vc2UgcHJvamVjdCBuYW1lLlxuSW4gdGhpcyBleGFtcGxlLCAiLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LCJEOlxcd29ya3NwYWNlXFxwcm9qZWN0XFxXNzUwMF90ZXN0XFxXNzUwMF9UZXN0LnV2cHJvaiIpKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWw1LmpwZyIsImFsdCI6ImtlaWw1In0pKSksbWR4KCJwIixudWxsLCJDaG9vc2UgJ0NvcnRleC1NMCcgYmVjYXVzZSBXNzUwMCBNQ1UgaXMgYmFzZWQgb24gQ29ydGV4LU0wIiksbWR4KCJoMyIseyJpZCI6InN0ZXAtNS13NzUwMC1zdGFydC11cC1jb2RlLWFuZC1zeXN0ZW0tY29kZS1zZXR0aW5nIn0sIlNURVAgNS4gVzc1MDAgc3RhcnQgdXAgY29kZSBhbmQgc3lzdGVtIGNvZGUgc2V0dGluZyEiKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWw3LmpwZyIsImFsdCI6ImtlaWw3In0pKSksbWR4KCJwIixudWxsLCJSZXR1cm4gdG8gcHJvamVjdC4gWW91IG5lZWQgdG8gbWFrZSB0aGUgc2FtZSBmb2xkZXJzIGxpa2UgdGhlIGltYWdlIHdoaWNoIGlzIHNob3duIG9uIHJpZ2h0IHNpZGUiKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWw4LmpwZyIsImFsdCI6ImtlaWw4In0pKSwiXG4iLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9wcm9kdWN0cy93NzUwMC9kb2N1bWVudHMvYXBwbm90ZS9kaXJlY3Rpb25fbGVmdGRvd24uanBnIiwiYWx0IjoiZGlyZWN0aW9uX2xlZnRkb3duIn0pKSwiXG4iLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9wcm9kdWN0cy93NzUwMC9kb2N1bWVudHMvYXBwbm90ZS9rZWlsOS5qcGciLCJhbHQiOiJrZWlsOSJ9KSksIlxuIixtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvdzc1MDAvZG9jdW1lbnRzL2FwcG5vdGUvZGlyZWN0aW9uX2xlZnRkb3duLmpwZyIsImFsdCI6ImRpcmVjdGlvbl9sZWZ0ZG93biJ9KSksIlxuIixtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvdzc1MDAvZG9jdW1lbnRzL2FwcG5vdGUva2VpbDEwLmpwZyIsImFsdCI6ImtlaWwxMCJ9KSksIlxuIixtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvdzc1MDAvZG9jdW1lbnRzL2FwcG5vdGUvZGlyZWN0aW9uX2xlZnRkb3duLmpwZyIsImFsdCI6ImRpcmVjdGlvbl9sZWZ0ZG93biJ9KSksIlxuIixtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvdzc1MDAvZG9jdW1lbnRzL2FwcG5vdGUva2VpbDExLmpwZyIsImFsdCI6ImtlaWwxMSJ9KSksIlxuIixtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvdzc1MDAvZG9jdW1lbnRzL2FwcG5vdGUvZGlyZWN0aW9uX2xlZnRkb3duLmpwZyIsImFsdCI6ImRpcmVjdGlvbl9sZWZ0ZG93biJ9KSksIlxuIixtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvdzc1MDAvZG9jdW1lbnRzL2FwcG5vdGUva2VpbDEyLmpwZyIsImFsdCI6ImtlaWwxMiJ9KSksIlxuIixtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvdzc1MDAvZG9jdW1lbnRzL2FwcG5vdGUvZGlyZWN0aW9uX2xlZnRkb3duLmpwZyIsImFsdCI6ImRpcmVjdGlvbl9sZWZ0ZG93biJ9KSksIlxuIixtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvdzc1MDAvZG9jdW1lbnRzL2FwcG5vdGUva2VpbDEzLmpwZyIsImFsdCI6ImtlaWwxMyJ9KSkpLG1keCgicCIsbnVsbCwiRm9sbG93IGxpa2UgdXBwZXIgaW1hZ2VzLiAiKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWwxNC5qcGciLCJhbHQiOiJrZWlsMTQifSkpKSxtZHgoInAiLG51bGwsIkFuZCBpbiB0aGUgc2FtZSB3YXkuLi4gIENNU0lTIEZvbGRlciBpbmNsdWRlIEQ6XFx3b3Jrc3BhY2VcXHByb2plY3RcXExpYnJhcmllc1xcQ01TSVNcXERldmljZVxcV0labmV0XFxXNzUwMFxcU291cmNlXFxzeXN0ZW1fVzc1MDAuYyBmaWxlIiksbWR4KCJwIixudWxsLCJXNzUwMF9QZXJpcGhzIGZvbGRlciBpbmNsdWRlcyBQZXJpcGhlcmFscyB0byB1c2UuIiksbWR4KCJwIixudWxsLCJBbmQgVXNlciBmb2xkZXIgaGFzIHRvIGluY2x1ZGUgbWFpbi5jIGFuZCBzbyBvbi4iKSxtZHgoInAiLG51bGwsIkxldCdzIG1ha2UgbWFpbi5jIiksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9wcm9kdWN0cy93NzUwMC9kb2N1bWVudHMvYXBwbm90ZS9rZWlsMTUuanBnIiwiYWx0Ijoia2VpbDE1In0pKSksbWR4KCJwIixudWxsLCJDbGljayB0byBBZGQgTmV3IEl0ZW0gdG8gdGhlIEdyb3VwLiIpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvdzc1MDAvZG9jdW1lbnRzL2FwcG5vdGUva2VpbDE2LmpwZyIsImFsdCI6ImtlaWwxNiJ9KSkpLG1keCgicCIsbnVsbCwiU2VsZWN0IEMgZmlsZSBhbmQgTmFtZSBpdCB3aXRoICdtYWluJyBhbmQgY2xpY2sgJ0FkZCcuIiksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9wcm9kdWN0cy93NzUwMC9kb2N1bWVudHMvYXBwbm90ZS9rZWlsMTcuanBnIiwiYWx0Ijoia2VpbDE3In0pKSksbWR4KCJwIixudWxsLCJJbmNsdWRlICIsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sInc3NTAweC5oIiksIiBoZWFkZXIgYnV0Li4uIHlvdSBzaG91bGQgc2hvdyByZWQgWCBiZWNhdXNlIHlvdSBkaWQgbm90IHBhdGguIiksbWR4KCJoMyIseyJpZCI6InN0ZXAtNi1zZXR0aW5nLWZvci1pbmNsdWRlLXBhdGhzIn0sIlNURVAgNi4gc2V0dGluZyBmb3IgaW5jbHVkZSBwYXRocyIpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvdzc1MDAvZG9jdW1lbnRzL2FwcG5vdGUva2VpbDE4LmpwZyIsImFsdCI6ImtlaWwxOCJ9KSkpLG1keCgicCIsbnVsbCwiQ2xpY2sgdG8gT3B0aW9ucyBmb3IgVGFyZ2V0Li4uIiksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9wcm9kdWN0cy93NzUwMC9kb2N1bWVudHMvYXBwbm90ZS9rZWlsMTkuanBnIiwiYWx0Ijoia2VpbDE5In0pKSksbWR4KCJwIixudWxsLCJTZWxlY3QgJ0luY2x1ZGUgUGF0aHMnIGluIENcXEMrKyB0YXAgYW5kIGNsaWNrIHRoZSBmb2xkZXIgaWNvbiBhbmQgY2xpY2sgdG8gLi4uIGljb24iKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWwyMC5qcGciLCJhbHQiOiJrZWlsMjAifSkpKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWxfLmpwZyIsImFsdCI6ImtlaWwrIn0pKSksbWR4KCJwIixudWxsLCJTZXQgJ2luY2x1ZGUgcGF0aCcgd2l0aCIpLG1keCgicCIsbnVsbCwiICAgIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiRDpcXHdvcmtzcGFjZVxccHJvamVjdFxcTGlicmFyaWVzXFxDTVNJU1xcRGV2aWNlXFxXSVpuZXRcXFc3NTAwXFxJbmNsdWRlIiksIlxuIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiRDpcXHdvcmtzcGFjZVxccHJvamVjdFxcTGlicmFyaWVzXFxXNzUwMHhfc3RkUGVyaXBoX0RyaXZlclxcaW5jIiksIlxuIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiRDpcXHdvcmtzcGFjZVxccHJvamVjdFxcTGlicmFyaWVzXFxDTVNJU1xcSW5jbHVkZSIpKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWwyMS5qcGciLCJhbHQiOiJrZWlsMjEifSkpKSxtZHgoImgzIix7ImlkIjoic3RlcC03LW1lbW9yeS1zZXR0aW5nIn0sIlNURVAgNy4gTWVtb3J5IHNldHRpbmchIiksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9wcm9kdWN0cy93NzUwMC9kb2N1bWVudHMvYXBwbm90ZS9rZWlsMTguanBnIiwiYWx0IjpudWxsfSkpKSxtZHgoInAiLG51bGwsIkNsaWNrIFwiT3B0aW9ucyBmb3IgVGFyZ2V0Li4uXCIiKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWwyMi0xLmpwZyIsImFsdCI6ImtlaWwyMi0xIn0pKSwiXG4iLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9wcm9kdWN0cy93NzUwMC9kb2N1bWVudHMvYXBwbm90ZS9kaXJlY3Rpb25fZG93bi5qcGciLCJhbHQiOiJkaXJlY3Rpb25fZG93biJ9KSksIlxuIixtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvdzc1MDAvZG9jdW1lbnRzL2FwcG5vdGUva2VpbDIyLTIuanBnIiwiYWx0Ijoia2VpbDIyLTIifSkpKSxtZHgoInAiLG51bGwsIkNsaWNrIFwiVGFyZ2V0XCIgdGFwIGFuZCBzZXQgd2l0aCB0aGUgdmFsdWVzIHdoaWNoIGFyZSBzaG93biBpbiBhYm92ZSBwaWN0dXJlcyIpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvdzc1MDAvZG9jdW1lbnRzL2FwcG5vdGUva2VpbDIzLmpwZyIsImFsdCI6ImtlaWwyMyJ9KSkpLG1keCgicCIsbnVsbCwiQW5kIGNsaWNrIFwiTGlua2VyXCIgdGFwIGFuZCBjaGVjayAiLCJbVXNlIE1lbW9yeSBMYXlvdXQgZnJvbSBUYXJnZXQgRGlhbG9nXSIpLG1keCgiaDMiLHsiaWQiOiJzdGVwLTgtc2VsZWN0aW9uLW9mLXBlcmlwaGVyYWxzLXRvLXVzZSJ9LCJTVEVQIDguIFNlbGVjdGlvbiBvZiBQZXJpcGhlcmFscyB0byB1c2UiKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWwxOC5qcGciLCJhbHQiOiJrZWlsMTgifSkpKSxtZHgoInAiLG51bGwsIkNsaWNrIFwiT3B0aW9ucyBmb3IgVGFyZ2V0Li4uXCIiKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWwyNC5qcGciLCJhbHQiOiJrZWlsMjQifSkpKSxtZHgoInAiLG51bGwsIkNsaWNrIFwiQy9DKytcIiB0YXAgYW5kIGFkZCAiLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LCJDT1JURVhfTTAgVVNFX1NURFBFUklQSF9EUklWRVIiKSwiIGluIFwiRGVmaW5lXCIgZmllbGQuIiksbWR4KCJoMyIseyJpZCI6InN0ZXAtOS1zZXR0aW5nLXVzZXItcHJvZ3JhbS10by11c2Utd2l0aC10aGUtY3JlYXRlZC1iaW4tZmlsZSJ9LCJTVEVQIDkuIFNldHRpbmcgdXNlciBwcm9ncmFtIHRvIHVzZSB3aXRoIHRoZSBjcmVhdGVkIGJpbiBmaWxlIiksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9wcm9kdWN0cy93NzUwMC9kb2N1bWVudHMvYXBwbm90ZS9rZWlsMTguanBnIiwiYWx0Ijoia2VpbDE4In0pKSksbWR4KCJwIixudWxsLCJDbGljayBcIk9wdGlvbnMgZm9yIFRhcmdldC4uLlwiIiksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9wcm9kdWN0cy93NzUwMC9kb2N1bWVudHMvYXBwbm90ZS9rZWlsMjUuanBnIiwiYWx0Ijoia2VpbDI1In0pKSksbWR4KCJwIixudWxsLCJDbGljayBcIlVzZXJcIiB0YXAgYW5kIGNoZWNrIFwiUnVuICMxXCIgaW4gXCJSdW4gVXNlciBQcm9ncmFtcyBBZnRlciBCdWlsZC9SZWJ1aWxkXCIgc2VjdGlvbiIsbWR4KCJiciIse3BhcmVudE5hbWU6InAifSksIlxuIiwiYW5kIHdyaXRlIHRoaXMgY29tbWFuZCAiLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LCJbZnJvbWVsZiAtLWJpbiAtbyBcIiRMQEwuYmluXCIgXCIjTFwiXSIpLCIgaW4gb3JkZXIgQ01TSVMgREFQIHRvIHVzZSB0aGUgYmluIGZpbGUuIiksbWR4KCJoMyIseyJpZCI6InN0ZXAtMTAtY29tcGlsZS10aGUtZXhhbXBsZSJ9LCJTVEVQIDEwLiBDb21waWxlIHRoZSBleGFtcGxlIiksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9wcm9kdWN0cy93NzUwMC9kb2N1bWVudHMvYXBwbm90ZS9rZWlsMjYuanBnIiwiYWx0Ijoia2VpbDI2In0pKSksbWR4KCJwIixudWxsLCJMZXQncyBjb21waWxlIHRoZSBleGFtcGxlIGNvZGUgaW4gIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiRDpcXHdvcmtzcGFjZVxccHJvamVjdFxcUHJvamVjdHNcXFBlcmlwaGVyYWxfRXhhbXBsZXNcXEdQSU9cXEJsaW5rX0xFRCIpLCJcblRoaXMgZm9sZCBjb25zaXN0cyBvZiAiLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LCJtYWluLmMiKSwiLCAgIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiVzc1MDB4X2NvbmYuaCIpLCIsICIsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sIlc3NTAweF9pdC5jIiksIiBhbmQgIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiVzc1MDB4X2l0LmgiKSwiIGFuZCB5b3Ugc2hvdWxkIGNvcHkgdGhlc2UgZm91ciBmaWxlcyB0byAiLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LCJEOlxcd29ya3NwYWNlXFxwcm9qZWN0XFxXNzUwMF9UZXN0IiksIihteSBwcm9qZWN0IGZvbGRlcikiKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWwyNy5qcGciLCJhbHQiOiJrZWlsMjcifSkpKSxtZHgoInAiLG51bGwsIkFuZCBjb3B5IFc3NTAweF9ncGlvLmMgaW50byBXNzUwMF9QZXJpcGhzIGZvbGRlciBpbiBvcmRlciB0byB1c2UgZ3BpbyBwZXJpcGhlcmFsICIpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvdzc1MDAvZG9jdW1lbnRzL2FwcG5vdGUva2VpbDI4LmpwZyIsImFsdCI6ImtlaWwyOCJ9KSkpLG1keCgicCIsbnVsbCwiQW5kIGNvcHkgIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiVzc1MDB4X2l0LmMiKSwiIGludG8gVXNlciBmb2xkZXIgZm9yIGludGVycnVwdCBoYW5kbGVycyIpLG1keCgicCIsbnVsbCwiQWRkIFwiSW5jbHVkZSBQYXRoXCIgZm9yICIsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sIlc3NTAweF9jb25mLmgiKSwiIGFuZCAiLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LCJXNzUwMHhfaXQuaCIpKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWwxOC5qcGciLCJhbHQiOiJrZWlsMTgifSkpKSxtZHgoInAiLG51bGwsIkNsaWNrIFwiT3B0aW9ucyBmb3IgVGFyZ2V0Li4uXCIiKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWwxOS5qcGciLCJhbHQiOiJrZWlsMTkifSkpKSxtZHgoInAiLG51bGwsIkNsaWNrIFwiSW5jbHVkZSBQYXRoc1wiIGluIENcXEMrKyB0YXAsIFwiZm9sZGVyIGljb24gYW5kIC4uLiBpY29uIiksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9wcm9kdWN0cy93NzUwMC9kb2N1bWVudHMvYXBwbm90ZS9rZWlsMjkuanBnIiwiYWx0Ijoia2VpbDI5In0pKSksbWR4KCJwIixudWxsLCJTZXQgXCJpbmNsdWRlIHBhdGhcIiB3aXRoICIsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sIkQ6XFx3b3Jrc3BhY2VcXHByb2plY3RcXFc3NTAwX1Rlc3QiKSksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9wcm9kdWN0cy93NzUwMC9kb2N1bWVudHMvYXBwbm90ZS9rZWlsMzAuanBnIiwiYWx0Ijoia2VpbDMwIn0pKSksbWR4KCJwIixudWxsLCJOb3cgY29tcGlsZSB0aGlzIHByb2plY3QhISBieSBwcmVzc2luZyAiLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LCJGNyIpLCIgb3IgY2xpY2tpbmcgIixtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiQnVpbGQgaWNvbiIpKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3c3NTAwL2RvY3VtZW50cy9hcHBub3RlL2tlaWwzMS5qcGciLCJhbHQiOiJrZWlsMzEifSkpKSxtZHgoInAiLG51bGwsIkFmdGVyIGNvbXBpbGUsICIsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sIlc3NTAwX1Rlc3QuYmluIiksIiBmaWxlIHdpbGwgYmUgY3JlYXRlZC5cbkFuZCB0aGVuIFdJWndpa2ktVzc1MDAgd2lsbCB1cGxvYWQgdGhpcyBiaW4gZmlsZSBvbiBpdHNlbGYgdmlhIHRoZSBVc2VyIHByb2dyYW0geW91IHJlZ2lzdGVyZWQuIiksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9wcm9kdWN0cy93NzUwMC9kb2N1bWVudHMvYXBwbm90ZS9wZGYuanBnIiwiYWx0IjpudWxsfSkpKSxtZHgoInAiLG51bGwsIklmIHlvdSB3YW50IHRvIGNvbnZlcnQgdGhpcyBkb2N1bWVudCB0byB0aGUgUERGIGZpbGU/IENsaWNrIHRvICIsIltFeHBvcnQgdG8gUERGXSIpLG1keCgicCIsbnVsbCwiXHhBOSIsIiBDT1BZUklHSFQgMjAxNSBXSVpuZXQgQ28uLEx0ZC4iKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},null]}