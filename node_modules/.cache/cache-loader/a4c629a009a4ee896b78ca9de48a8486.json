{"remainingRequest":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/albinjoseph/Documents/GitHub/document_framework/docs/Product/iMCU/W7500/Peripherals-internal/illumination_sensor.md","dependencies":[{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/docs/Product/iMCU/W7500/Peripherals-internal/illumination_sensor.md","mtime":1596193974286},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/.docusaurus/docusaurus-plugin-content-docs/site-docs-product-i-mcu-w-7500-peripherals-internal-illumination-sensor-md-876.json","mtime":1597141330208},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/cache-loader/dist/cjs.js","mtime":1596197835880},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/babel-loader/lib/index.js","mtime":1596197835282},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1596377278862},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1596377277825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2FsYmluam9zZXBoL0RvY3VtZW50cy9HaXRIdWIvZG9jdW1lbnRfZnJhbWV3b3JrL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0e21keH1mcm9tJ0BtZHgtanMvcmVhY3QnO2V4cG9ydCBjb25zdCBmcm9udE1hdHRlcj17aWQ6J2lsbHVtaW5hdGlvbl9zZW5zb3InLHRpdGxlOidBREMgZXhhbXBsZSAoSWxsdW1pbmF0aW9uIHNlbnNvciknLGRhdGU6bmV3IERhdGUoJzIwMjAtMDYtMTBUMDA6MDA6MDAuMDAwWicpfTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJ1bnZlcnNpb25lZElkIjoiUHJvZHVjdC9pTUNVL1c3NTAwL1BlcmlwaGVyYWxzLWludGVybmFsL2lsbHVtaW5hdGlvbl9zZW5zb3IiLCJpZCI6IlByb2R1Y3QvaU1DVS9XNzUwMC9QZXJpcGhlcmFscy1pbnRlcm5hbC9pbGx1bWluYXRpb25fc2Vuc29yIiwiaXNEb2NzSG9tZVBhZ2UiOmZhbHNlLCJ0aXRsZSI6IkFEQyBleGFtcGxlIChJbGx1bWluYXRpb24gc2Vuc29yKSIsImRlc2NyaXB0aW9uIjoiKioqKioqKioqKioqKioqKioqKioiLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL1Byb2R1Y3QvaU1DVS9XNzUwMC9QZXJpcGhlcmFscy1pbnRlcm5hbC9pbGx1bWluYXRpb25fc2Vuc29yLm1kIiwicGVybWFsaW5rIjoiL2RvY3MvUHJvZHVjdC9pTUNVL1c3NTAwL1BlcmlwaGVyYWxzLWludGVybmFsL2lsbHVtaW5hdGlvbl9zZW5zb3IiLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL1dpem5ldC9kb2N1bWVudF9mcmFtZXdvcmsvdHJlZS9tYXN0ZXIvZG9jcy9Qcm9kdWN0L2lNQ1UvVzc1MDAvUGVyaXBoZXJhbHMtaW50ZXJuYWwvaWxsdW1pbmF0aW9uX3NlbnNvci5tZCJ9Oy8qIEBqc3ggbWR4ICovZXhwb3J0IGNvbnN0IHJpZ2h0VG9jPVt7dmFsdWU6J0V4YW1wbGUgRGVzY3JpcHRpb24nLGlkOidleGFtcGxlLWRlc2NyaXB0aW9uJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidEaXJlY3RvcnkgY29udGVudHMnLGlkOidkaXJlY3RvcnktY29udGVudHMnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0hhcmR3YXJlIGFuZCBTb2Z0d2FyZSBlbnZpcm9ubWVudCcsaWQ6J2hhcmR3YXJlLWFuZC1zb2Z0d2FyZS1lbnZpcm9ubWVudCcsY2hpbGRyZW46W119LHt2YWx1ZTonSG93IHRvIHVzZSBpdCA/JyxpZDonaG93LXRvLXVzZS1pdC0nLGNoaWxkcmVuOltdfSx7dmFsdWU6J0Zsb3cgQ2hhcnQnLGlkOidmbG93LWNoYXJ0JyxjaGlsZHJlbjpbXX1dO2NvbnN0IG1ha2VTaG9ydGNvZGU9bmFtZT0+ZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgIituYW1lKyIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpO3JldHVybiBtZHgoImRpdiIscHJvcHMpO307Y29uc3QgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe2NvbXBvbmVudHMsLi4ucHJvcHN9KXtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImhyIixudWxsKSxtZHgoInAiLG51bGwsYChDKSBDT1BZUklHSFQgMjAxNSBXSVpuZXQgQ28uLEx0ZC5gKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBmaWxlICAgIDogSWxsdW1pbmF0aW9uX3JlZ2xlZC9yZWFkbWUubWRgKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgYXV0aG9yICA6IElPUCBUZWFtYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYHZlcnNpb24gOiBWMS4wLjBgKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgZGF0ZSAgICA6IDEtTWF5LTIwMTVgKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgYnJpZWYgICA6IERlc2NyaXB0aW9uIG9mIHRoZSBJbGx1bWluYXRpb24gc2Vuc29yICYgUkVHIGxlZCB0b2dnbGUgZXhhbXBsZS5gKSksbWR4KCJociIsbnVsbCksbWR4KCJwIixudWxsLGBUSEUgUFJFU0VOVCBGSVJNV0FSRSBXSElDSCBJUyBGT1IgR1VJREFOQ0UgT05MWSBBSU1TIEFUIFBST1ZJRElORyBDVVNUT01FUlMgV0lUSCBDT0RJTkcgSU5GT1JNQVRJT04gUkVHQVJESU5HIFRIRUlSIFBST0RVQ1RTIElOIE9SREVSIEZPUiBUSEVNIFRPIFNBVkUgVElNRS4gQVMgQSBSRVNVTFQsIFdJWk5FVCBTSEFMTCBOT1QgQkUgSEVMRCBMSUFCTEUgRk9SIEFOWSBESVJFQ1QsIElORElSRUNUIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyBXSVRIIFJFU1BFQ1QgVE8gQU5ZIENMQUlNUyBBUklTSU5HIEZST00gVEhFIENPTlRFTlQgT0YgU1VDSCBGSVJNV0FSRSBBTkQvT1IgVEhFIFVTRSBNQURFIEJZIENVU1RPTUVSUyBPRiBUSEUgQ09ESU5HIElORk9STUFUSU9OIENPTlRBSU5FRCBIRVJFSU4gSU4gQ09OTkVDVElPTiBXSVRIIFRIRUlSIFBST0RVQ1RTLmApLG1keCgiaHIiLG51bGwpLG1keCgiaDMiLHsiaWQiOiJleGFtcGxlLWRlc2NyaXB0aW9uIn0sYEV4YW1wbGUgRGVzY3JpcHRpb25gKSxtZHgoInAiLG51bGwsYFRoaXMgZXhhbXBsZSBzaG93cyBob3cgdG8gdXNlIEFEQyBvZiBXNzUwMC4KSW4gdGhpcyBleGFtcGxlLCBBREMgaW5wdXQgaXMgY29ubmVjdGVkIHdpdGggaWxsdW1pbmF0aW9uIHNlbnNvci4gQW5kIGNvbnRyb2wgUkdCIGxlZCBieSBpbGx1bWluYXRpb24gc2Vuc29yIHZhbHVlLmApLG1keCgicCIsbnVsbCxgSW4gdGhpcyBleGFtcGxlOmApLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYFNldCB0aGUgQWx0ZXJuYXRlIGZ1bmN0aW9uIG9mIFBBRCBmb3IgdGhpcyBleGFtcGxlLmApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBTZW5zaW5nIGFuYWxvZyB2YWx1ZSBvZiBJbGx1bWluYXRpb24gc2Vuc29yLmApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBJZiBkYXJrLCBPTiB0aGUgbGVkLCBpZiBub3QsIE9GRiB0aGUgbGVkIHdpdGggR1BJTyBjb250cm9sLmApKSxtZHgoImhyIixudWxsKSxtZHgoImgzIix7ImlkIjoiZGlyZWN0b3J5LWNvbnRlbnRzIn0sYERpcmVjdG9yeSBjb250ZW50c2ApLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYEFEQy9JbGx1bWluYXRpb25fcmVnbGVkL21haW4uYyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKE1haW4gcHJvZ3JhbSlgKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgQURDL0lsbHVtaW5hdGlvbl9yZWdsZWQvVzc1MDB4X2l0LmMgICAgICAgICAgICAgICAgICAgICAgICAgICAoSW50ZXJydXB0IEhhbmRsZXJzKWApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBBREMvSWxsdW1pbmF0aW9uX3JlZ2xlZC9XNzUwMHhfaXQuaCAgICAgICAgICAgICAgICAgICAgICAgICAgIChJbnRlcnJ1cHQgSGFuZGxlcnMgSGVhZGVyIGZpbGUpYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYEFEQy9JbGx1bWluYXRpb25fcmVnbGVkL1c3NTAweF9jb25mLmggICAgICAgICAgICAgICAgICAgICAgICAgKExpYnJhcnkgQ29uZmlndXJhdGlvbiBmaWxlKWApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBBREMvSWxsdW1pbmF0aW9uX3JlZ2xlZC9NREsvVzc1MDB4X0lsbHVtaW5hdGlvbl9yZWdsZWQudXZwcm9qICAgICAoTURLIFByb2plY3QgZmlsZSlgKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgQURDL0lsbHVtaW5hdGlvbl9yZWdsZWQvR0NDL01ha2VmaWxlICAgICAgICAgICAgICAgICAgICAgICAgICAoR0NDIE1ha2UgZmlsZSlgKSksbWR4KCJociIsbnVsbCksbWR4KCJoMyIseyJpZCI6ImhhcmR3YXJlLWFuZC1zb2Z0d2FyZS1lbnZpcm9ubWVudCJ9LGBIYXJkd2FyZSBhbmQgU29mdHdhcmUgZW52aXJvbm1lbnRgKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgicCIse3BhcmVudE5hbWU6ImxpIn0sYFRoaXMgZXhhbXBsZSBoYXMgYmVlbiB0ZXN0ZWQgd2l0aCBXSVpuZXQgV0lad2lraSBXNzUwMCBwbGF0Zm9ybS5gKSksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJwIix7cGFyZW50TmFtZToibGkifSxgVG8gc2VsZWN0IHRoZSBXSVpuZXQgV0lad2lraSBwbGF0Zm9ybSB1c2VkIHRvIHJ1biB0aGUgZXhhbXBsZS5gKSksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJwIix7cGFyZW50TmFtZToibGkifSxgV0lad2lraSBXNzUwMCBTZXQtdXBgKSxtZHgoInVsIix7cGFyZW50TmFtZToibGkifSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgVXNlIEFEQyBpbnB1dCBjb25uZWN0ZWQgdG8gUENfMTUoQTApIHBpbi5gKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgVXNlIExFRChSKSBjb25uZWN0ZWQgdG8gUENfMDggcGluLmApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBVc2UgTEVEKEcpIGNvbm5lY3RlZCB0byBQQ18wOSBwaW4uYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYFVzZSBMRUQoQikgY29ubmVjdGVkIHRvIFBDXzA1IHBpbi5gKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgSW4gb3JkZXIgdG8gdXNlIHRoZSBMRURzIHRvIGJlIGNoYW5nZWQgZnJvbSBQQURfQUYwIHRvIFBBRF9BRjEuICBgKSkpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgicCIse3BhcmVudE5hbWU6ImxpIn0sYEhhcmR3YXJlIENvbm5lY3Rpb25gKSxtZHgoInAiLHtwYXJlbnROYW1lOiJsaSJ9LGAgNVYgLSAxMEsgb2htIHJlZ2lzdGVyIC0gUENfMTUoQTApIC0gSWxsdW1pbmF0aW9uIHNlbnNvciAtIEdORGApKSksbWR4KCJociIsbnVsbCksbWR4KCJoMyIseyJpZCI6Imhvdy10by11c2UtaXQtIn0sYEhvdyB0byB1c2UgaXQgP2ApLG1keCgicCIsbnVsbCxgSW4gb3JkZXIgdG8gbWFrZSB0aGUgcHJvZ3JhbSB3b3JrLCB5b3UgbXVzdCBkbyB0aGUgZm9sbG93aW5nIDpgKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBPcGVuIHlvdXIgcHJlZmVycmVkIHRvb2xjaGFpbi5gKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgUmVidWlsZCBhbGwgZmlsZXMgYW5kIGxvYWQgeW91ciBpbWFnZSBpbnRvIHRhcmdldCBtZW1vcnkuYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYFJ1biB0aGUgZXhhbXBsZS5gKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgV0lad2lraSBXNzUwMCB3aGVyZSB0aGUgRmxhc2ggbWVtb3J5IGRlbnNpdHkgcmFuZ2VzIDEyOEtieXRlcy5gKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgSWYgeW91IGhhdmUgYW55IHF1ZXN0aW9ucywgcGxlYXNlIHVzZSB0aGUgZm9ydW0gc2l0ZS5gLG1keCgidWwiLHtwYXJlbnROYW1lOiJsaSJ9LG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGAiYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHBzOi8vZm9ydW0ud2l6bmV0LmlvLyUyMiJ9KSxgaHR0cHM6Ly9mb3J1bS53aXpuZXQuaW8vImApKSkpKSxtZHgoImhyIixudWxsKSxtZHgoImgzIix7ImlkIjoiZmxvdy1jaGFydCJ9LGBGbG93IENoYXJ0YCksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgUG93ZXIgb24gQURDYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYFNlbGVjdCBBREMgY2hhbm5lbGApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBBREMgc3RhcnRgKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgV2FpdCB1bnRpbCBFT0MgKGVuZCBvZiBjb252ZXJzaW9uKWApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBSZWFkIEFEQyB2YWx1ZWApKSxtZHgoInAiLG51bGwsYMKpYCxgIENPUFlSSUdIVCAyMDE1IFdJWm5ldCBDby4sTHRkLmApKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},null]}