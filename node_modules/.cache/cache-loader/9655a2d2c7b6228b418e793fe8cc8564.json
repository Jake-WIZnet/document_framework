{"remainingRequest":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/albinjoseph/Documents/GitHub/document_framework/docs/Product/Open-Source-Hardware/getting_started_arduino_kr.md","dependencies":[{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/docs/Product/Open-Source-Hardware/getting_started_arduino_kr.md","mtime":1596193974240},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/.docusaurus/docusaurus-plugin-content-docs/site-docs-product-open-source-hardware-getting-started-arduino-kr-md-e0f.json","mtime":1597141330196},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/cache-loader/dist/cjs.js","mtime":1596197835880},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/babel-loader/lib/index.js","mtime":1596197835282},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1596377278862},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1596377277825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2FsYmluam9zZXBoL0RvY3VtZW50cy9HaXRIdWIvZG9jdW1lbnRfZnJhbWV3b3JrL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0e21keH1mcm9tJ0BtZHgtanMvcmVhY3QnO2V4cG9ydCBjb25zdCBmcm9udE1hdHRlcj17aWQ6J2dldHRpbmdfc3RhcnRlZF9hcmR1aW5vX2tyJyx0aXRsZTonR2V0dGluZyBTdGFydGVkIGZvciBBcmR1aW5vJyxkYXRlOm5ldyBEYXRlKCcyMDIwLTA0LTAzVDAwOjAwOjAwLjAwMFonKX07ZXhwb3J0IGNvbnN0IG1ldGFkYXRhPXsidW52ZXJzaW9uZWRJZCI6IlByb2R1Y3QvT3Blbi1Tb3VyY2UtSGFyZHdhcmUvZ2V0dGluZ19zdGFydGVkX2FyZHVpbm9fa3IiLCJpZCI6IlByb2R1Y3QvT3Blbi1Tb3VyY2UtSGFyZHdhcmUvZ2V0dGluZ19zdGFydGVkX2FyZHVpbm9fa3IiLCJpc0RvY3NIb21lUGFnZSI6ZmFsc2UsInRpdGxlIjoiR2V0dGluZyBTdGFydGVkIGZvciBBcmR1aW5vIiwiZGVzY3JpcHRpb24iOiJXSVogRXRoZXJuZXQgTGlicmFyeSBVcGRhdGUiLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL1Byb2R1Y3QvT3Blbi1Tb3VyY2UtSGFyZHdhcmUvZ2V0dGluZ19zdGFydGVkX2FyZHVpbm9fa3IubWQiLCJwZXJtYWxpbmsiOiIvZG9jcy9Qcm9kdWN0L09wZW4tU291cmNlLUhhcmR3YXJlL2dldHRpbmdfc3RhcnRlZF9hcmR1aW5vX2tyIiwiZWRpdFVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9XaXpuZXQvZG9jdW1lbnRfZnJhbWV3b3JrL3RyZWUvbWFzdGVyL2RvY3MvUHJvZHVjdC9PcGVuLVNvdXJjZS1IYXJkd2FyZS9nZXR0aW5nX3N0YXJ0ZWRfYXJkdWlub19rci5tZCJ9Oy8qIEBqc3ggbWR4ICovZXhwb3J0IGNvbnN0IHJpZ2h0VG9jPVt7dmFsdWU6J1dJWiBFdGhlcm5ldCBMaWJyYXJ5IFVwZGF0ZScsaWQ6J3dpei1ldGhlcm5ldC1saWJyYXJ5LXVwZGF0ZScsY2hpbGRyZW46W119LHt2YWx1ZTonQXJkdWlubyBXZWIgU2VydmVyIEV4YW1wbGVzJyxpZDonYXJkdWluby13ZWItc2VydmVyLWV4YW1wbGVzJyxjaGlsZHJlbjpbXX1dO2NvbnN0IG1ha2VTaG9ydGNvZGU9bmFtZT0+ZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgIituYW1lKyIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpO3JldHVybiBtZHgoImRpdiIscHJvcHMpO307Y29uc3QgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe2NvbXBvbmVudHMsLi4ucHJvcHN9KXtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgyIix7ImlkIjoid2l6LWV0aGVybmV0LWxpYnJhcnktdXBkYXRlIn0sYFdJWiBFdGhlcm5ldCBMaWJyYXJ5IFVwZGF0ZWApLG1keCgicCIsbnVsbCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSxgIFN0ZXAgMSA6IERvd25sb2FkIGZvciBBcmR1aW5vIFdJWm5ldCBsaWJyYXJ5IGApKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBXSVpuZXQgR2l0SHViIFJlcG9zaXRvcnnsl5DshJwgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmNvbS9XaXpuZXQvV0laX0V0aGVybmV0X0xpYnJhcnkifSksYFdJWiBFdGhlcm5ldApMaWJyYXJ5YCksYOulvCBkb3dubG9hZArtlZzri6QuYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYERvd25sb2FkIFpJUCBidXR0b27snYQg7YG066at7ZWY7JesIOuLpOyatOuhnOuTnCDtlZzri6QuYCkpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvb3NoL3c1NTAwX2V0aGVybmV0X3NoaWVsZC9saWJyYXJ5X2Rvd24ucG5nIiwiYWx0IjpudWxsfSkpKSxtZHgoImhyIixudWxsKSxtZHgoInAiLG51bGwsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sYCBTdGVwIDIgOiBMaWJyYXJ5IENvcHkgJiBQYXN0ZSBgKSksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxg67Cb7J2AIFpJUO2MjOydvOydmCDslZXstpXsnYQg7ZG864ukLmApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBDOmAsYFxcYCxgUHJvZ3JhbSBGaWxlc2AsYFxcYCxgQXJkdWlub2AsYFxcYCxgbGlicmFyaWVzIOqyveuhnOuhnCDsoJHsho3tlZzri6QuYCkpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvb3NoL3c1NTAwX2V0aGVybmV0X3NoaWVsZC9mb2xkZXJfMy5wbmciLCJhbHQiOm51bGx9KSkpLG1keCgicCIsbnVsbCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSxgQXJkdWlubyBJREUgMS4wLnhgKSksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgMS4wLnggVmVyc2lvbuydgCBBcmR1aW5vIElERSAxLjAueCDtj7TrjZQgLWAsYD5gLGAgRXRoZXJuZXQg7Y+0642U66W8IOyVhOuemOydmCDqsr3roZzsl5Ag6re464yA66GcCuuzteyCrCbrtpnsl6zrhKPquLAg7ZWc64ukLmApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGDqsr3roZwgPSBDOmAsYFxcYCxgUHJvZ3JhbSBGaWxlc2AsYFxcYCxgQXJkdWlub2AsYFxcYCxgbGlicmFyaWVzYCkpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvb3NoL3c1NTAwX2V0aGVybmV0X3NoaWVsZC9mb2xkZXJfMS5wbmciLCJhbHQiOm51bGx9KSkpLG1keCgicCIsbnVsbCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSxgQXJkdWlubyBJREUgMS41LnhgKSksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgMS41Lngg7IOB7JyEIFZlcnNpb27snYAgQXJkdWlubyBJREUgMS41Lngg7Y+0642UIC1gLGA+YCxgIEV0aGVybmV0IC1gLGA+YCxgIHNyYyDtj7TrjZTrp4wg67O17IKs7ZWY7JesCuyVhOuemOydmCDqsr3roZzsl5Ag67O17IKsJuu2meyXrOuEo+q4sCDtlZzri6QuYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYOqyveuhnCA9IEM6YCxgXFxgLGBQcm9ncmFtIEZpbGVzYCxgXFxgLGBBcmR1aW5vYCxgXFxgLGBsaWJyYXJpZXNgLGBcXGAsYEV0aGVybmV0YCkpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvb3NoL3c1NTAwX2V0aGVybmV0X3NoaWVsZC9mb2xkZXJfMi5wbmciLCJhbHQiOm51bGx9KSkpLG1keCgiaHIiLG51bGwpLG1keCgicCIsbnVsbCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSxgIFN0ZXAgMzogQXJkdWlubyBMaWJyYXJ5IEltcG9ydCBgKSksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgQXJkdWlubyBJREXripQg64uk7J2MIOq3uOumvOqzvCDqsJnsnbQgTGlicmFyeeulvCBJbXBvcnTtlZjsl6wg7IKs7Jqp7ZWgIOyImCDsnojri6QuYCkpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvb3NoL3c1NTAwX2V0aGVybmV0X3NoaWVsZC9nZXR0aW5nMy0xLnBuZyIsImFsdCI6bnVsbH0pKSksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgQXJkdWlubyBFdGhlcm5ldCBzaGllbGTrpbwg7Zmc7Jqp7ZWY6riwIOychO2VnCBsaWJyYXJ564qUIFNrZXRjaCDrqZTribTsnZggSW1wb3J0IExpYnJhcnkKYCxgPmAsYCBFdGhlcm5ldOydhCDshKDtg53tlZjrqbQg7ZSE66Gc7KCd7Yq47JeQIOq0gOugqCBoZWFkZXIgZmlsZeuTpOydtCDstpTqsIDrkJzri6QuYCkpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvb3NoL3c1NTAwX2V0aGVybmV0X3NoaWVsZC9nZXR0aW5nMy0yLnBuZyIsImFsdCI6bnVsbH0pKSksbWR4KCJociIsbnVsbCksbWR4KCJoMiIseyJpZCI6ImFyZHVpbm8td2ViLXNlcnZlci1leGFtcGxlcyJ9LGBBcmR1aW5vIFdlYiBTZXJ2ZXIgRXhhbXBsZXNgKSxtZHgoInAiLG51bGwsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJwIn0sYCBTdGVwIDEgOiBBcmR1aW5vIOyLnOyeke2VmOq4sCBgKSksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgQXJkdWlub+ulvCDsi6TtlontlZzri6QuYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYEV4YW1wbGVzIC1gLGA+YCxgIEV0aGVybmV0IC1gLGA+YCxgIFdlYnNlcnZlcuulvCDshKDtg53tlZjsl6wg7Iuk7ZaJ7ZWc64ukLmApKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL29zaC93NTUwMF9ldGhlcm5ldF9zaGllbGQvZ2V0dGluZzQucG5nIiwiYWx0IjpudWxsfSkpKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBVbm8sIE1lZ2EsIER1ZSDrk7Eg67O065OcIOyiheulmOyXkCDrlLDrnbwg7JWM66ee6rKMIFNldHRpbmftlZzri6QuYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYOuPhOq1rCAtYCxgPmAsYCDrs7Trk5wgLWAsYD5gLGAgQXJkdWlubyBVbm9gKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxg64+E6rWsIC1gLGA+YCxgIO2PrO2KuCAtYCxgPmAsYCBDT014YCkpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvb3NoL3c1NTAwX2V0aGVybmV0X3NoaWVsZC9nZXR0aW5nNS5wbmciLCJhbHQiOm51bGx9KSkpLG1keCgiaHIiLG51bGwpLG1keCgicCIsbnVsbCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSxgIFN0ZXAgMiA6IEFyZHVpbm8g64+Z7J6R7ZmV7J24IGApKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBWZXJpZnnsnYQg7YG066at7ZWY7JesIOy9lOuTnCDsl5Drn6zqsIAg7JeG64qU7KeAIO2ZleyduO2VnOuLpC5gKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxg7J207IOB7JeG64uk66m0LCBVcGxvYWTrpbwg7YG066at7ZWY7JesIEFyZHVpbm8g67O065Oc7JeQIFVwbG9hZO2VnOuLpC5gKSksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9vc2gvdzU1MDBfZXRoZXJuZXRfc2hpZWxkL2dldHRpbmc2LnBuZyIsImFsdCI6bnVsbH0pKSksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgVXBsb2Fk7JmE66OMIO2bhCBTZXJpYWwgTW9uaXRvcuulvCDtgbTrpq1gKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxg64uk7J2M6rO8IOqwmeydgCBJUCBBZGRyZXNz6rCAIOuCmOyYpOuKlOyngCDtmZXsnbjtlZzri6QuYCkpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvb3NoL3c1NTAwX2V0aGVybmV0X3NoaWVsZC9nZXR0aW5nNy5wbmciLCJhbHQiOm51bGx9KSkpLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYOydtOygnCBJbnRlcm5ldCBFeHBsb3JlICYgQ2hyb21l7J2EIOydtOyaqe2VmOyXrCBTZXJpYWwgTW9uaXRvcuyXkCDrgpjsmKggSVDroZwg7KCR7IaN7ZWc64ukLmApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGDri6TsnYzqs7wg6rCZ7J2AIOqysOqzvOqwgCDrgpjsmKjri6TrqbQg7KCV7IOB64+Z7J6R7ZWY64qUIOqyg+ydtOuLpC5gKSksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9vc2gvdzU1MDBfZXRoZXJuZXRfc2hpZWxkL2dldHRpbmc4LnBuZyIsImFsdCI6bnVsbH0pKSksbWR4KCJociIsbnVsbCksbWR4KCJwIixudWxsLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LGAgU3RlcCA2IDogRW5qb3kgaXQgYCxgIWAsYCBgKSksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgTGV0J3MgcGxheWApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBDcmVhdGUgeW91ciBuZXcgYXBwbGljYXRpb24gJiBuZXcgY29udGVudGApKSxtZHgoImhyIixudWxsKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},null]}