{"remainingRequest":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/albinjoseph/Documents/GitHub/document_framework/docs/Product/Mbed-WIZwiki-Platform/WIZwiki-W7500-Mbed-Starter-Kit/Exercise_2._Serial_port(Eng).md","dependencies":[{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/docs/Product/Mbed-WIZwiki-Platform/WIZwiki-W7500-Mbed-Starter-Kit/Exercise_2._Serial_port(Eng).md","mtime":1596193974228},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/.docusaurus/docusaurus-plugin-content-docs/site-docs-product-mbed-wi-zwiki-platform-wi-zwiki-w-7500-mbed-starter-kit-exercise-2-serial-port-eng-md-837.json","mtime":1597141330198},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/cache-loader/dist/cjs.js","mtime":1596197835880},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/babel-loader/lib/index.js","mtime":1596197835282},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1596377278862},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1596377277825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2FsYmluam9zZXBoL0RvY3VtZW50cy9HaXRIdWIvZG9jdW1lbnRfZnJhbWV3b3JrL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0e21keH1mcm9tJ0BtZHgtanMvcmVhY3QnO2V4cG9ydCBjb25zdCBmcm9udE1hdHRlcj17aWQ6J2V4ZXJjaXNlXzJfc2VyaWFsX3BvcnRfZW5nJyx0aXRsZTonRXhlcmNpc2UgMi4gU2VyaWFsIHBvcnQoRW5nKScsZGF0ZTpuZXcgRGF0ZSgnMjAyMC0wNC0wOFQwMDowMDowMC4wMDBaJyl9O2V4cG9ydCBjb25zdCBtZXRhZGF0YT17InVudmVyc2lvbmVkSWQiOiJQcm9kdWN0L01iZWQtV0lad2lraS1QbGF0Zm9ybS9XSVp3aWtpLVc3NTAwLU1iZWQtU3RhcnRlci1LaXQvZXhlcmNpc2VfMl9zZXJpYWxfcG9ydF9lbmciLCJpZCI6IlByb2R1Y3QvTWJlZC1XSVp3aWtpLVBsYXRmb3JtL1dJWndpa2ktVzc1MDAtTWJlZC1TdGFydGVyLUtpdC9leGVyY2lzZV8yX3NlcmlhbF9wb3J0X2VuZyIsImlzRG9jc0hvbWVQYWdlIjpmYWxzZSwidGl0bGUiOiJFeGVyY2lzZSAyLiBTZXJpYWwgcG9ydChFbmcpIiwiZGVzY3JpcHRpb24iOiJEYXRhIE91dHB1dCB1c2luZyBTZXJpYWwgUG9ydCIsInNvdXJjZSI6IkBzaXRlL2RvY3MvUHJvZHVjdC9NYmVkLVdJWndpa2ktUGxhdGZvcm0vV0lad2lraS1XNzUwMC1NYmVkLVN0YXJ0ZXItS2l0L0V4ZXJjaXNlXzIuX1NlcmlhbF9wb3J0KEVuZykubWQiLCJwZXJtYWxpbmsiOiIvZG9jcy9Qcm9kdWN0L01iZWQtV0lad2lraS1QbGF0Zm9ybS9XSVp3aWtpLVc3NTAwLU1iZWQtU3RhcnRlci1LaXQvZXhlcmNpc2VfMl9zZXJpYWxfcG9ydF9lbmciLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL1dpem5ldC9kb2N1bWVudF9mcmFtZXdvcmsvdHJlZS9tYXN0ZXIvZG9jcy9Qcm9kdWN0L01iZWQtV0lad2lraS1QbGF0Zm9ybS9XSVp3aWtpLVc3NTAwLU1iZWQtU3RhcnRlci1LaXQvRXhlcmNpc2VfMi5fU2VyaWFsX3BvcnQoRW5nKS5tZCIsInNpZGViYXIiOiJzb21lU2lkZWJhciIsInByZXZpb3VzIjp7InRpdGxlIjoiRXhlcmNpc2UgMS4gTEVEKEVuZykiLCJwZXJtYWxpbmsiOiIvZG9jcy9Qcm9kdWN0L01iZWQtV0lad2lraS1QbGF0Zm9ybS9XSVp3aWtpLVc3NTAwLU1iZWQtU3RhcnRlci1LaXQvZXhlcmNpc2VfMV9sZWRfZW5nIn0sIm5leHQiOnsidGl0bGUiOiJFeGVyY2lzZSAzLiBTd2l0Y2goRW5nKSIsInBlcm1hbGluayI6Ii9kb2NzL1Byb2R1Y3QvTWJlZC1XSVp3aWtpLVBsYXRmb3JtL1dJWndpa2ktVzc1MDAtTWJlZC1TdGFydGVyLUtpdC9leGVyY2lzZV8zX3N3aXRjaF9lbmcifX07LyogQGpzeCBtZHggKi9leHBvcnQgY29uc3QgcmlnaHRUb2M9W3t2YWx1ZTonT3V0bGluZScsaWQ6J291dGxpbmUnLGNoaWxkcmVuOltdfSx7dmFsdWU6J1doYXQgeW91IG5lZWQnLGlkOid3aGF0LXlvdS1uZWVkJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidIYXJkd2FyZScsaWQ6J2hhcmR3YXJlJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidTb2Z0d2FyZScsaWQ6J3NvZnR3YXJlJyxjaGlsZHJlbjpbe3ZhbHVlOidFeGFtcGxlIENvZGUnLGlkOidleGFtcGxlLWNvZGUnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0hvdyB0byBydW4gYW5kIHRlc3QgcmVzdWx0JyxpZDonaG93LXRvLXJ1bi1hbmQtdGVzdC1yZXN1bHQnLGNoaWxkcmVuOltdfV19LHt2YWx1ZTonQW5vdGhlciBleGFtcGxlJyxpZDonYW5vdGhlci1leGFtcGxlJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidSZWxhdGVkIExpbmtzJyxpZDoncmVsYXRlZC1saW5rcycsY2hpbGRyZW46W119XTtjb25zdCBtYWtlU2hvcnRjb2RlPW5hbWU9PmZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O2NvbnN0IGxheW91dFByb3BzPXtyaWdodFRvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJoMSIseyJpZCI6ImRhdGEtb3V0cHV0LXVzaW5nLXNlcmlhbC1wb3J0In0sYERhdGEgT3V0cHV0IHVzaW5nIFNlcmlhbCBQb3J0YCksbWR4KCJoMiIseyJpZCI6Im91dGxpbmUifSxgT3V0bGluZWApLG1keCgicCIsbnVsbCxgVXNlcnMgY2FuIHVzZSB0aGUgV0lad2lraSBib2FyZOKAmXMgc2VyaWFsIHBvcnQgdG8gc2VuZCBkYXRhIHRvIFBDIG9yCmVudGVyIGRhdGEgaW4gdGhlIFBDIGFuZCBzZW5kIGl0IHRvIHRoZSBXSVp3aWtpIGJvYXJkLiBUaGlzIGV4ZXJjaXNlCndpbGwgc2hvdyB1c2VycyBob3cgdG8gY2hlY2sgbWVzc2FnZXMgb24gdGhlIFBDIHdoaWxlIHRoZSBpbXBsZW1lbnRlZApjb2RlIGlzIG9wZXJhdGluZyBvbiB0aGUgV0lad2lraS1XNzUwMCBib2FyZC5gKSxtZHgoImgyIix7ImlkIjoid2hhdC15b3UtbmVlZCJ9LGBXaGF0IHlvdSBuZWVkYCksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgUENgKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgV0lad2lraS1XNzUwMGApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBVU0IgY2FibGVgKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgVGVzdCBTL1cgOiBJbiBvcmRlciB0byBjaGVjayBzZXJpYWwgZGF0YSwgdGVybWluYWwgcHJvZ3JhbSBpcwpyZXF1aXJlZCBvbiB0aGUgUEMuIFRlcmEgVGVybSBpcyB1c2VkIGluIHRoaXMgZXhlcmNpc2UuYCkpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvd2l6d2lraV9tYmVkX2tpdC9raXRfZW4vMl90ZXJhdGVybS5wbmciLCJhbHQiOm51bGx9KSkpLG1keCgiaDIiLHsiaWQiOiJoYXJkd2FyZSJ9LGBIYXJkd2FyZWApLG1keCgicCIsbnVsbCxgQ29ubmVjdCB0aGUgUEMgd2l0aCBXSVp3aWtpLVc3NTAwIHVzaW5nIHRoZSBVU0IgY2FibGUuYCksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9wcm9kdWN0cy93aXp3aWtpX21iZWRfa2l0L2tpdF9lbi9iZF91c2JfY29ubmVjdGVkLmpwZyIsImFsdCI6bnVsbH0pKSksbWR4KCJoMiIseyJpZCI6InNvZnR3YXJlIn0sYFNvZnR3YXJlYCksbWR4KCJoMyIseyJpZCI6ImV4YW1wbGUtY29kZSJ9LGBFeGFtcGxlIENvZGVgKSxtZHgoInAiLG51bGwsYEJlbG93IGFyZSB0aGUgZXhhbXBsZSBjb2Rlcy4gRGVsZXRlIHRoZSBkZWZhdWx0IGNvZGUgYW5kIGNvcHkvcGFzdGUgdGhlCmNvZGVzIGJlbG93IGFuZCBjb21waWxlLmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtYyJ9KSxgI2luY2x1ZGUgIm1iZWQuaCIKCkRpZ2l0YWxPdXQgbXlsZWQoTEVEMSk7ClNlcmlhbCBwYyhTRVJJQUxfVFgsIFNFUklBTF9SWCk7CgppbnQgY291bnRfYmxpbmsgPSAwOwoKaW50IG1haW4oKSB7CiAgICB3aGlsZSgxKSB7CiAgICAgICAgbXlsZWQgPSAxOwogICAgICAgIC8vcGMucHJpbnRmKCJteWxlZCA9IDFcXG4iKTsKICAgICAgICB3YWl0KDAuMik7CiAgICAgICAgbXlsZWQgPSAwOwogICAgICAgIC8vcGMucHJpbnRmKCJteWxlZCA9IDBcXG4iKTsKICAgICAgICB3YWl0KDAuMik7CiAgICAgICAgY291bnRfYmxpbmsrKzsKICAgICAgICBwYy5wcmludGYoIlRoZSBudW1iZXIgb2YgYmxpbmsgPSAlZFxcbiIsIGNvdW50X2JsaW5rKTsKICAgIH0KfQpgKSksbWR4KCJoMyIseyJpZCI6Imhvdy10by1ydW4tYW5kLXRlc3QtcmVzdWx0In0sYEhvdyB0byBydW4gYW5kIHRlc3QgcmVzdWx0YCksbWR4KCJwIixudWxsLGBGaXJzdCwgY2hhbmdlIHRoZSBwcm9ncmFtIG5hbWUgZnJvbSDigJhtYmVkLWJsaW5reeKAmSB0byBhbnkgbmFtZSAoZXg6CnNlcmlhbCkuYCksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9wcm9kdWN0cy93aXp3aWtpX21iZWRfa2l0L2tpdF9lbi8yYS5wbmciLCJhbHQiOm51bGx9KSkpLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvd2l6d2lraV9tYmVkX2tpdC9raXRfZW4vMmIucG5nIiwiYWx0IjpudWxsfSkpKSxtZHgoInAiLG51bGwsYEdvIHRvIFByb2dyYW0gV29ya3NwYWNlIGFuZCBzZWxlY3QgbWFpbi5jcHAgYW5kIGVkaXQuIERlbGV0ZSB0aGUgZGVmYXVsdApjb2RlIGFuZCBjb3B5L3Bhc3RlIHRoZSBleGFtcGxlIGNvZGVzIGFuZCBjb21waWxlLiBTZXQgdGhlIFRlcmEgVGVybSBhcwpzaG93biBiZWxvdy4gYCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvd2l6d2lraV9tYmVkX2tpdC9raXRfZW4vMmMucG5nIiwiYWx0IjpudWxsfSkpKSxtZHgoInAiLG51bGwsYElmIHRoZSB1c2VyIGNvbm5lY3RzIHRoZSBXSVp3aWtpIGJvYXJkIHdpdGggdGhlIFBDLCB0aGUgcG9ydCB3aWxsIGJlCmFkZGVkLiBTZWxlY3QgQ09NMTEgKENPTSBgLGAjYCxgIGNvdWxkIHZhcnkgZGVwZW5kaW5nIG9uIHRoZSB1c2Vy4oCZcyBQQykuCmAsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3Byb2R1Y3RzL3dpendpa2lfbWJlZF9raXQva2l0X2VuLzJkLnBuZyIsImFsdCI6bnVsbH0pKSksbWR4KCJwIixudWxsLGBUaGUgcHJvZ3JhbSByZXN1bHRzIGFyZSBhcyBiZWxvdy4KYCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvcHJvZHVjdHMvd2l6d2lraV9tYmVkX2tpdC9raXRfZW4vMmUucG5nIiwiYWx0IjpudWxsfSkpKSxtZHgoImgyIix7ImlkIjoiYW5vdGhlci1leGFtcGxlIn0sYEFub3RoZXIgZXhhbXBsZWApLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYFNlcmlhbGAsYF9gLGBIZWxsb1dvcmxkYCxgX2AsYFdJWndpa2ktVzc1MDBgKSksbWR4KCJwIixudWxsLGBUaGlzIGV4YW1wbGUgY2FuIGRvIGJvdGggZGF0YSBvdXRwdXQgYW5kIGlucHV0IGFuZCBpcyBjcmVhdGVkIGJ5IHRoZQpXSVpuZXQgdGVhbS4gQ2xpY2sgdGhlIGxpbmsgYmVsb3cgYW5kIG9wZW4gbWFpbi5jcHAgdG8gY29weS9pbXBvcnQvdGVzdAp0aGUgY29kZS5gKSxtZHgoInAiLG51bGwsYPCfjI5gLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL2RldmVsb3Blci5tYmVkLm9yZy90ZWFtcy9XSVpuZXQvY29kZS9TZXJpYWxfSGVsbG9Xb3JsZF9XSVp3aWtpLVc3NTAwLyJ9KSxgaHR0cHM6Ly9kZXZlbG9wZXIubWJlZC5vcmcvdGVhbXMvV0labmV0L2NvZGUvU2VyaWFsX0hlbGxvV29ybGRfV0lad2lraS1XNzUwMC9gKSksbWR4KCJoMiIseyJpZCI6InJlbGF0ZWQtbGlua3MifSxgUmVsYXRlZCBMaW5rc2ApLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJ0dXRvcmlhbF9lbmcifSksYFN0YXJ0ZXIgS2l0IFR1dG9yaWFsYCkpKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},null]}