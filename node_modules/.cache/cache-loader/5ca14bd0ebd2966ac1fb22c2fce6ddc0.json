{"remainingRequest":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/albinjoseph/Documents/GitHub/document_framework/docs/Product/Open-Source-Hardware/ioShield-K.md","dependencies":[{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/docs/Product/Open-Source-Hardware/ioShield-K.md","mtime":1596193974241},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/.docusaurus/docusaurus-plugin-content-docs/site-docs-product-open-source-hardware-io-shield-k-md-cd1.json","mtime":1597141330196},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/cache-loader/dist/cjs.js","mtime":1596197835880},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/babel-loader/lib/index.js","mtime":1596197835282},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1596377278862},{"path":"/Users/albinjoseph/Documents/GitHub/document_framework/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1596377277825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2FsYmluam9zZXBoL0RvY3VtZW50cy9HaXRIdWIvZG9jdW1lbnRfZnJhbWV3b3JrL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0e21keH1mcm9tJ0BtZHgtanMvcmVhY3QnO2V4cG9ydCBjb25zdCBmcm9udE1hdHRlcj17aWQ6J2lvc2hpZWxkX2snLHRpdGxlOidpb1NoaWVsZC1LJyxkYXRlOm5ldyBEYXRlKCcyMDIwLTA0LTAzVDAwOjAwOjAwLjAwMFonKX07ZXhwb3J0IGNvbnN0IG1ldGFkYXRhPXsidW52ZXJzaW9uZWRJZCI6IlByb2R1Y3QvT3Blbi1Tb3VyY2UtSGFyZHdhcmUvaW9zaGllbGRfayIsImlkIjoiUHJvZHVjdC9PcGVuLVNvdXJjZS1IYXJkd2FyZS9pb3NoaWVsZF9rIiwiaXNEb2NzSG9tZVBhZ2UiOmZhbHNlLCJ0aXRsZSI6ImlvU2hpZWxkLUsiLCJkZXNjcmlwdGlvbiI6Ik92ZXJ2aWV3Iiwic291cmNlIjoiQHNpdGUvZG9jcy9Qcm9kdWN0L09wZW4tU291cmNlLUhhcmR3YXJlL2lvU2hpZWxkLUsubWQiLCJwZXJtYWxpbmsiOiIvZG9jcy9Qcm9kdWN0L09wZW4tU291cmNlLUhhcmR3YXJlL2lvc2hpZWxkX2siLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL1dpem5ldC9kb2N1bWVudF9mcmFtZXdvcmsvdHJlZS9tYXN0ZXIvZG9jcy9Qcm9kdWN0L09wZW4tU291cmNlLUhhcmR3YXJlL2lvU2hpZWxkLUsubWQiLCJzaWRlYmFyIjoic29tZVNpZGViYXIiLCJwcmV2aW91cyI6eyJ0aXRsZSI6ImlvU2hpZWxkLUEiLCJwZXJtYWxpbmsiOiIvZG9jcy9Qcm9kdWN0L09wZW4tU291cmNlLUhhcmR3YXJlL2lvc2hpZWxkX2EifSwibmV4dCI6eyJ0aXRsZSI6ImlvU2hpZWxkLUwiLCJwZXJtYWxpbmsiOiIvZG9jcy9Qcm9kdWN0L09wZW4tU291cmNlLUhhcmR3YXJlL2lvc2hpZWxkX2wifX07LyogQGpzeCBtZHggKi9leHBvcnQgY29uc3QgcmlnaHRUb2M9W3t2YWx1ZTonT3ZlcnZpZXcnLGlkOidvdmVydmlldycsY2hpbGRyZW46W119LHt2YWx1ZTonR0FER0VUIFJFTkVTQVMnLGlkOidnYWRnZXQtcmVuZXNhcycsY2hpbGRyZW46W119LHt2YWx1ZTonR1ItS1VSVU1JJyxpZDonZ3Ita3VydW1pJyxjaGlsZHJlbjpbXX1dO2NvbnN0IG1ha2VTaG9ydGNvZGU9bmFtZT0+ZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgIituYW1lKyIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpO3JldHVybiBtZHgoImRpdiIscHJvcHMpO307Y29uc3QgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe2NvbXBvbmVudHMsLi4ucHJvcHN9KXtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgyIix7ImlkIjoib3ZlcnZpZXcifSxgT3ZlcnZpZXdgKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL29zaC9pb3NoaWVsZC1rL2lvX3Nfay5wbmciLCJhbHQiOm51bGx9KSksYCBpb1NoaWVsZC1LIGlzIGFuIEV0aGVybmV0IFNoaWVsZCBmb3IgR1ItS1VSVU1JKEdhZGdldCBSZW5lc2FzIEtVUlVNSSkuIFRoZSBpb1NoaWVsZC1LIGFsbG93cyBhIEdSLUtVUlVNSSBib2FyZCB0byBjb25uZWN0IHRvIHRoZSBpbnRlcm5ldC4gSXQgaXMgYmFzZWQgb24gdGhlIFdpem5ldCBXNTUwMCBldGhlcm5ldCBjaGlwIChgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIuLi9pRXRoZXJuZXQvVzU1MDAvZGF0YXNoZWV0In0pLGBXNTUwMCBEYXRhc2hlZXRgKSxgKS4gVGhlIFdpem5ldCBXNTUwMCBwcm92aWRlcyBhIG5ldHdvcmsgKElQKSBzdGFjayBjYXBhYmxlIG9mIGJvdGggVENQIGFuZCBVRFAuIEl0IHN1cHBvcnRzIHVwIHRvIGVpZ2h0IHNpbXVsdGFuZW91cyBzb2NrZXQgY29ubmVjdGlvbnMuIFVzZSB0aGUgRXRoZXJuZXQgbGlicmFyeSjwn5OEYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL1dpem5ldC9XSVpfRXRoZXJuZXRfTGlicmFyeSJ9KSxgV0laX0V0aGVybmV0X0xpYnJhcnlgKSxgKSB0byB3cml0ZSBza2V0Y2hlcyB3aGljaCBjb25uZWN0IHRvIHRoZSBpbnRlcm5ldCB1c2luZyB0aGUgc2hpZWxkLiBUaGUgaW9TaGllbGQtSyBjb25uZWN0cyB0byBhbiBHUi1LVVJVTUkgYm9hcmQgdXNpbmcgbG9uZyB3aXJlLXdyYXAgaGVhZGVycyB3aGljaCBleHRlbmQgdGhyb3VnaCB0aGUgc2hpZWxkLmApLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvb3NoL2lvc2hpZWxkLWsvaW9fc19rLnBuZyIsImFsdCI6bnVsbH0pKSksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgSGFyZHdhcmUgVmVyMS4wIERlc2lnbiBmaWxlKGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiIvaW1nL29zaC9pb3NoaWVsZC1rL2lvc2hpZWxkLWsucGRmIn0pLGBQREZgKSxgIC8gYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Ii9pbWcvb3NoL2lvc2hpZWxkLWsvaW9zaGllbGQta19lYWdsZWNhZC56aXAifSksYEVhZ2xlIENBRGApLGApIGFuZCBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiL2ltZy9vc2gvaW9zaGllbGQtay9pb3NoaWVsZC1rX3YxXzBfcGxfMTMwOTA0LnBkZiJ9KSxgUGFydCBMaXN0YCksYCBvZiBpb1NoaWVsZC1LYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYEhhcmR3YXJlIFZlcjEuMSBEZXNpZ24gZmlsZShgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiL2ltZy9vc2gvaW9zaGllbGQtay9pb3NoaWVsZC1rX3YxLjFfc2NoLnBkZiJ9KSxgUERGYCksYCAvIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiIvaW1nL29zaC9pb3NoaWVsZC1rL2lvX3NoaWVsZC1rX3ZlcjFfMS56aXAifSksYEVhZ2xlIENBRGApLGApIGFuZCBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiL2ltZy9vc2gvaW9zaGllbGQtay9pb3NoaWVsZC1rX3YxXzFfcGxfMTQwMTIwLnBkZiJ9KSxgUGFydCBMaXN0YCksYCBvZiBpb1NoaWVsZC1LYCkpLG1keCgiaDIiLHsiaWQiOiJnYWRnZXQtcmVuZXNhcyJ9LGBHQURHRVQgUkVORVNBU2ApLG1keCgicCIsbnVsbCxgR2FkZ2V0IFJlbmVzYXMgaXMgYSBwcm9tb3Rpb24gcHJvamVjdCB0byBvZmZlciBhIHNlcmllcyBvZiBib2FyZHMgYW5kCuKAnGVhc3kgdG8gc3RhcnQgd2l0aOKAnSBjbG91ZC1iYXNlZCBzb2Z0d2FyZSBlbnZpcm9ubWVudCBmb3IgcGVvcGxlIHdobwpoYXZlIG5vIGVtYmVkZGVkIHByb2dyYW1taW5nIGV4cGVyaWVuY2UsIGZvciBlbWJlZGRlZCBwcm9mZXNzaW9uYWxzIHRvCmRvIHJhcGlkIHByb3RvdHlwaW5nLiBgKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBCb2FyZCAgICAgICAgOiBHUi1TQUtVUkEgKFJYNjNOKSAvIGAsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJsaSJ9LG1keCgic3Ryb25nIix7cGFyZW50TmFtZToic3Ryb25nIn0sYEdSLUtVUlVNSSAoUkw3OC9HMTMpYCkpKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgV2ViLUNvbXBsaWVyIDpgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cDovL3d3dy5yZW5lc2FzLmNvbS9wcm9kdWN0cy9wcm9tb3Rpb24vZ3IvaW5kZXguanNwIn0pLGBXZWItQmFzZWQgQ29tcGxpZXJgKSxgIGApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBMaWJyYXJ5ICAgICAgOmAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwOi8vdG9vbC1jbG91ZC5yZW5lc2FzLmNvbS9SZW5lc2FzL3JlZl9rdXJ1bWkvZ3JfcmVmZXJlbmNlX2ouaHRtbCJ9KSxgS1VSVU1JIFNLRVRDSCAoSmFwYW5lc2UpYCkpKSxtZHgoImgyIix7ImlkIjoiZ3Ita3VydW1pIn0sYEdSLUtVUlVNSWApLG1keCgicCIsbnVsbCxgR1ItS1VSVU1JIGlzIHRoZSByZWZlcmVuY2UgYm9hcmQgdGhhdCBpbmNvcnBvcmF0ZXMgdGhlIFJMNzhHMTQgKFJlbmVzYXMKMTYtYml0IGxvdy1wb3dlciBjb25zdW1wdGlvbiBNQ1UpLiBDb21wYXRpYmxlIHdpdGggQXJkdWlubyBQcm8gTWluaSwKdGhpcyBuZXcgYm9hcmQgY2FuIHVzZSBleGlzdGluZyBzYW1wbGUgY29kZXMsIGVuc3VyaW5nIGVhc3kgdXNlIHdpdGgKQXJkdWlubyBsYW5ndWFnZSBhbmQgc3RhbmRhcmQgbGlicmFyaWVzIGZyb20gYm90aCBoYXJkd2FyZSBhbmQgc29mdHdhcmUKYXNwZWN0cy4gYCksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgSC9XYCkpLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYFMvVyBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cDovL3JlbmVzYXNydWx6LmNvbS9hcHBfa2l0c19hbmRfZGVtb19ib2FyZHMvZ2FkZ2V0X3JlbmVzYXNfdXNlcl9mb3J1bS9mLzEyOC90LzM5NjguYXNweCJ9KSxgS1VSVU1JIExpYnJhcnkKKEphcGFuZXNlKWApKSkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}